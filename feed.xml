<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.2">Jekyll</generator><link href="https://chuckleplant.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://chuckleplant.github.io/" rel="alternate" type="text/html" /><updated>2023-10-09T13:30:03+02:00</updated><id>https://chuckleplant.github.io/feed.xml</id><title type="html">chuckleplant</title><subtitle>Sergio Basurco&apos;s personal portfolio. I&apos;m a game developer based in Barcelona. Have fun browsing my little projects.
</subtitle><author><name>Sergio Basurco</name></author><entry><title type="html">Anim Blueprint Logic in Code</title><link href="https://chuckleplant.github.io/2023/10/09/custom-nested-nodes.html" rel="alternate" type="text/html" title="Anim Blueprint Logic in Code" /><published>2023-10-09T00:00:00+02:00</published><updated>2023-10-09T00:00:00+02:00</updated><id>https://chuckleplant.github.io/2023/10/09/custom-nested-nodes</id><content type="html" xml:base="https://chuckleplant.github.io/2023/10/09/custom-nested-nodes.html"><![CDATA[<p>Epicmetheus created Blueprints to resemble Code. C++, king of Olympus and ruler of all Code, deemed this as a transgression. Living a happy and simple life, Blueprints, weak and hideous as they are, still harbor dreams of one day rivaling the power of C++ himself. They often spend their days whimsically playing with us, mere mortals. It is, for this very reason, that C++ despises Blueprints and looks down on them from the heights of Mount Performance.</p>

<p><em>I’ve been playing Hades.</em></p>

<p>Here I’ll show you how to use Anim Blueprint nodes from code. Is that worth doing? Not usually, it’s way simpler to do it from Blueprint. But it’s a handy tool in case you want to hide some complexity under the hood and expose only a pretty node in the editor.</p>

<p>I won’t cover the basics of doing custom animation nodes. You can find that in <a href="https://www.unrealengine.com/en-US/blog/creating-custom-animation-nodes">this post</a> by Unreal. I would also highly recommend reading the full <a href="https://docs.unrealengine.com/5.3/en-US/animation-node-technical-guide-in-unreal-engine/">Animation Node Technical Guide</a>. I will also show only the relevant code bits. You can find the <a href="/zips/NestedNodeModules.zip">full code here</a> so you can browse at your own pace.</p>

<p>For this example, I will implement a basic node that blends two poses. The blend weight will be determined by a Curve asset, which is evaluated in a loop. Then we will use the Modify Curve node to relay curve information to the animation pipeline.</p>

<div class="image-container">
    <div class="Container">
        <div class="Content">
            <img class="audiovisual" src="/images/posts/nested-node-nodes.png" alt="The anim nodes we will put inside our custom node." style="width: auto;" />
        </div>
    </div>
    <span class="caption" style="font-size: 80%"><i>The anim nodes we will put inside our custom node.</i></span>
</div>

<p>We’ll have to create AnimNode and AnimGraphNode classes in separate modules. It’s important that you define AnimNode classes in a Runtime module and AnimGraphNode classes in an <strong>Uncooked Only</strong> module. Otherwise you’ll get a warning and potentially issues when packaging.</p>

<p>In your plugin or project file, add the module definitions. Here’s where we can specify that it’s an UncookedOnly module.</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
    </span><span class="nl">"Name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"AnimCode"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"Type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Runtime"</span><span class="w">
</span><span class="p">}</span><span class="err">,</span><span class="w">
</span><span class="p">{</span><span class="w">
    </span><span class="nl">"Name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"AnimCodeEditor"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"Type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"UncookedOnly"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>It’s also good practice to add <code class="language-plaintext highlighter-rouge">OverridePackageType = PackageOverrideType.GameUncookedOnly;</code> to your module’s Build.cs file. Unreal code rarely does this and the .uproject code above will work. But still it won’t harm doing this and it will be more explicit to anyone reading the code.</p>

<p>In our AnimNode class you can declare any <code class="language-plaintext highlighter-rouge">UPROPERTY</code> that you want to expose to the user. We will also declare a <code class="language-plaintext highlighter-rouge">UCurveFloat</code> reference so that users can link assets from the Editor. We will also declare our Blend node of type <code class="language-plaintext highlighter-rouge">FAnimNode_TwoWayBlend</code> and a <code class="language-plaintext highlighter-rouge">FAnimNode_ModifyCurve</code> node, which we’ll use to relay the blend weight as an animation curve for any system that wants to consume it. You can declare as many anim nodes as you wish.</p>

<p>The ModifyCurve node is a very useful tool and you should use it for specific animation trees to communicate something to the rest of the system. For instance, you can have the jump animation logic use this node to disable Feet IK while the jump is active. This assumes you have a curve e.g. <code class="language-plaintext highlighter-rouge">DisableFeetIK</code> that gets evaluated and used as the Alpha for the Feet IK nodes.</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nl">public:</span>
    <span class="c1">// Exposed pose pin</span>
    <span class="n">UPROPERTY</span><span class="p">(</span><span class="n">EditAnywhere</span><span class="p">,</span> <span class="n">BlueprintReadWrite</span><span class="p">,</span> <span class="n">Category</span> <span class="o">=</span> <span class="n">Links</span><span class="p">)</span>
    <span class="n">FPoseLink</span> <span class="n">PoseA</span><span class="p">;</span>

    <span class="c1">// Exposed pose pin</span>
    <span class="n">UPROPERTY</span><span class="p">(</span><span class="n">EditAnywhere</span><span class="p">,</span> <span class="n">BlueprintReadWrite</span><span class="p">,</span> <span class="n">Category</span> <span class="o">=</span> <span class="n">Links</span><span class="p">)</span>
    <span class="n">FPoseLink</span> <span class="n">PoseB</span><span class="p">;</span>

    <span class="c1">// Curve asset will be available in the details panel</span>
    <span class="n">UPROPERTY</span><span class="p">(</span><span class="n">EditAnywhere</span><span class="p">,</span> <span class="n">BlueprintReadWrite</span><span class="p">,</span> <span class="n">Category</span> <span class="o">=</span> <span class="n">Blend</span><span class="p">)</span>
    <span class="n">UCurveFloat</span><span class="o">*</span> <span class="n">BlendWeightCurve</span> <span class="o">=</span> <span class="nb">nullptr</span><span class="p">;</span>
    
    <span class="c1">// The curve name we'll use in ModifyCurve</span>
    <span class="n">UPROPERTY</span><span class="p">(</span><span class="n">EditAnywhere</span><span class="p">,</span> <span class="n">BlueprintReadWrite</span><span class="p">,</span> <span class="n">Category</span> <span class="o">=</span> <span class="n">ModifyCurve</span><span class="p">)</span>
    <span class="n">FName</span> <span class="n">CurveName</span><span class="p">;</span>

<span class="k">private</span><span class="o">:</span>
    <span class="c1">// Blend node</span>
    <span class="n">FAnimNode_TwoWayBlend</span>   <span class="n">mBlend</span><span class="p">;</span>
    <span class="n">FAnimNode_ModifyCurve</span>   <span class="n">mModifyCurve</span><span class="p">;</span>

    <span class="c1">// Blend weight control variables</span>
    <span class="kt">float</span>                   <span class="n">mBlendWeight</span> <span class="o">=</span> <span class="mf">0.</span><span class="n">f</span><span class="p">;</span>
    <span class="kt">float</span>                   <span class="n">mCurveTime</span> <span class="o">=</span> <span class="mf">0.</span><span class="n">f</span><span class="p">;</span>
</code></pre></div></div>

<p>On initialization, we will connect the pins under the hood. We have to make sure that <code class="language-plaintext highlighter-rouge">mBlend</code> is initialized since this node already has some pins that need to be connected. Since this node is now hidden from the user we must connect them in code. Note that <code class="language-plaintext highlighter-rouge">mBlend</code> already contains <code class="language-plaintext highlighter-rouge">FPoseLink</code> references, we can just copy ours to them since these are simple structs representing runtime animation pins.</p>

<p>To connect any two existing AnimNodes we do this via their <code class="language-plaintext highlighter-rouge">FPoseLink</code>. We’re connecting mBlend to mModifyCurve by calling <code class="language-plaintext highlighter-rouge">SetLinkNode</code>. This is the same as dragging the pose pin in the Editor. From this point onwards we can forget about <code class="language-plaintext highlighter-rouge">mBlend</code> since the leading node is now <code class="language-plaintext highlighter-rouge">mModifyCurve</code>. Notice how we call <code class="language-plaintext highlighter-rouge">Initialize_AnyThread</code> on <code class="language-plaintext highlighter-rouge">mModifyCurve</code>, but not on <code class="language-plaintext highlighter-rouge">mBlend</code>.</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">void</span> <span class="n">FAnimNode_NestedNodes</span><span class="o">::</span><span class="n">Initialize_AnyThread</span><span class="p">(</span><span class="k">const</span> <span class="n">FAnimationInitializeContext</span><span class="o">&amp;</span> <span class="n">Context</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">DECLARE_SCOPE_HIERARCHICAL_COUNTER_ANIMNODE</span><span class="p">(</span><span class="n">Initialize_AnyThread</span><span class="p">)</span>
    <span class="n">FAnimNode_Base</span><span class="o">::</span><span class="n">Initialize_AnyThread</span><span class="p">(</span><span class="n">Context</span><span class="p">);</span>

    <span class="c1">// Connect pins to our two way blend, set to float type</span>
    <span class="n">mBlend</span><span class="p">.</span><span class="n">A</span> <span class="o">=</span> <span class="n">PoseA</span><span class="p">;</span>
    <span class="n">mBlend</span><span class="p">.</span><span class="n">B</span> <span class="o">=</span> <span class="n">PoseB</span><span class="p">;</span>
    <span class="n">mBlend</span><span class="p">.</span><span class="n">AlphaInputType</span> <span class="o">=</span> <span class="n">EAnimAlphaInputType</span><span class="o">::</span><span class="n">Float</span><span class="p">;</span>
    <span class="n">mBlend</span><span class="p">.</span><span class="n">Alpha</span> <span class="o">=</span> <span class="mf">0.</span><span class="n">f</span><span class="p">;</span>
    
    <span class="c1">// Connect blend node to modifyCurve node</span>
    <span class="n">mModifyCurve</span><span class="p">.</span><span class="n">SourcePose</span><span class="p">.</span><span class="n">SetLinkNode</span><span class="p">(</span><span class="o">&amp;</span><span class="n">mBlend</span><span class="p">);</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">CurveName</span> <span class="o">!=</span> <span class="n">NAME_None</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">mModifyCurve</span><span class="p">.</span><span class="n">CurveMap</span><span class="p">.</span><span class="n">FindOrAdd</span><span class="p">(</span><span class="n">CurveName</span><span class="p">)</span> <span class="o">=</span> <span class="mf">0.</span><span class="n">f</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="c1">// This will internally call Initialize for mBlend</span>
    <span class="n">mModifyCurve</span><span class="p">.</span><span class="n">Initialize_AnyThread</span><span class="p">(</span><span class="n">Context</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<p>For the Update and Evaluate methods we only have to bypass to the anim node that we’re using internally. We will also update the blend weight based on the curve that we exposed as a <code class="language-plaintext highlighter-rouge">UPROPERTY</code>. Finally, we will update the exposed curve value as a runtime animation curve.</p>

<p>It’s important to note that no matter how many nodes we’re using, <strong>you only have to update and evaluate one of them</strong>, the one that gives you the output pose for your custom node. This one will update and evaluate any pose links that you’ve connected to them recursively.</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">void</span> <span class="n">FAnimNode_NestedNodes</span><span class="o">::</span><span class="n">Update_AnyThread</span><span class="p">(</span><span class="k">const</span> <span class="n">FAnimationUpdateContext</span><span class="o">&amp;</span> <span class="n">Context</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">DECLARE_SCOPE_HIERARCHICAL_COUNTER_ANIMNODE</span><span class="p">(</span><span class="n">Update_AnyThread</span><span class="p">);</span>

    <span class="c1">// Update the blend node alpha based on our input curve</span>
    <span class="n">UpdateBlendWeight</span><span class="p">(</span><span class="n">Context</span><span class="p">);</span>

    <span class="c1">// Here we just update our blend node, and it will internally evaluate our source Poses A and B</span>
    <span class="n">mModifyCurve</span><span class="p">.</span><span class="n">Update_AnyThread</span><span class="p">(</span><span class="n">Context</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="n">FAnimNode_NestedNodes</span><span class="o">::</span><span class="n">Evaluate_AnyThread</span><span class="p">(</span><span class="n">FPoseContext</span><span class="o">&amp;</span> <span class="n">Output</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">DECLARE_SCOPE_HIERARCHICAL_COUNTER_ANIMNODE</span><span class="p">(</span><span class="n">Evaluate_AnyThread</span><span class="p">);</span>

    <span class="c1">// This will internally call the evaluation of our source poses</span>
    <span class="n">mModifyCurve</span><span class="p">.</span><span class="n">Evaluate_AnyThread</span><span class="p">(</span><span class="n">Output</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">DECLARE_SCOPE_HIERARCHICAL_COUNTER_ANIMNODE</code> is a macro used all over animation code for profiling. It’s good practice to add it so that Unreal’s profiling tools will pick up animation nodes properly.</p>

<p>We’ll also implement GatherDebugData indicating extra information that will show up when enabling animation debug. You do this by using the <code class="language-plaintext highlighter-rouge">showdebug ANIMATION</code> command from the console in the Editor or while playing. One thing to note with this one is that we’re not calling <code class="language-plaintext highlighter-rouge">mModifyCurve.GatherDebugData(...)</code> because that AnimNode isn’t implementing it. So we call <code class="language-plaintext highlighter-rouge">mBlend</code> so that the debug information on it isn’t lost.</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">void</span> <span class="n">FAnimNode_NestedNodes</span><span class="o">::</span><span class="n">GatherDebugData</span><span class="p">(</span><span class="n">FNodeDebugData</span><span class="o">&amp;</span> <span class="n">DebugData</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">DECLARE_SCOPE_HIERARCHICAL_COUNTER_ANIMNODE</span><span class="p">(</span><span class="n">GatherDebugData</span><span class="p">)</span>
    <span class="n">FString</span> <span class="n">DebugLine</span> <span class="o">=</span> <span class="n">DebugData</span><span class="p">.</span><span class="n">GetNodeName</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>
    <span class="n">DebugLine</span> <span class="o">+=</span> <span class="n">FString</span><span class="o">::</span><span class="n">Printf</span><span class="p">(</span><span class="n">TEXT</span><span class="p">(</span><span class="s">"(CurveTime: %.1f%)"</span><span class="p">),</span> <span class="n">mCurveTime</span><span class="p">);</span>
    <span class="n">DebugData</span><span class="p">.</span><span class="n">AddDebugItem</span><span class="p">(</span><span class="n">DebugLine</span><span class="p">);</span>
    <span class="n">mBlend</span><span class="p">.</span><span class="n">GatherDebugData</span><span class="p">(</span><span class="n">DebugData</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Using the <code class="language-plaintext highlighter-rouge">showdebug ANIMATION</code> command we can see all debug data reported by AnimNodes. In our case we added the curve time and the weight that’s being output as an Animation Curve.</p>

<div class="image-container">
    <div class="Container">
        <div class="Content">
            <img class="audiovisual" src="/images/posts/nested-nodes-debug.png" alt="" style="width: auto;" />
        </div>
    </div>
    <span class="caption" style="font-size: 80%"><i></i></span>
</div>

<p>Finally, here’s how we evaluate the curve asset in order to blend from one pose to another. We only need to take care of looping the curve evaluation over time. The <code class="language-plaintext highlighter-rouge">FAnimationUpdateContext</code> contains the DeltaTime required for this evaluation. We will also update the curve value on <code class="language-plaintext highlighter-rouge">mModifyCurve</code>.</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">void</span> <span class="n">FAnimNode_NestedNodes</span><span class="o">::</span><span class="n">UpdateBlendWeight</span><span class="p">(</span><span class="k">const</span> <span class="n">FAnimationUpdateContext</span><span class="o">&amp;</span> <span class="n">Context</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">BlendWeightCurve</span> <span class="o">==</span> <span class="nb">nullptr</span> <span class="o">||</span> <span class="n">BlendWeightCurve</span><span class="o">-&gt;</span><span class="n">FloatCurve</span><span class="p">.</span><span class="n">Keys</span><span class="p">.</span><span class="n">Num</span><span class="p">()</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">return</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">const</span> <span class="kt">float</span> <span class="n">DeltaTime</span>       <span class="o">=</span> <span class="n">Context</span><span class="p">.</span><span class="n">GetDeltaTime</span><span class="p">();</span>
    <span class="n">mCurveTime</span>                  <span class="o">+=</span> <span class="n">DeltaTime</span><span class="p">;</span>
    <span class="k">const</span> <span class="kt">float</span> <span class="n">CurveDuration</span>   <span class="o">=</span> <span class="n">BlendWeightCurve</span><span class="o">-&gt;</span><span class="n">FloatCurve</span><span class="p">.</span><span class="n">Keys</span><span class="p">.</span><span class="n">Last</span><span class="p">().</span><span class="n">Time</span><span class="p">;</span>
    <span class="n">mCurveTime</span>                  <span class="o">=</span> <span class="n">FMath</span><span class="o">::</span><span class="n">Fmod</span><span class="p">(</span><span class="n">mCurveTime</span><span class="p">,</span> <span class="n">CurveDuration</span><span class="p">);</span>
    <span class="n">mBlend</span><span class="p">.</span><span class="n">Alpha</span>                <span class="o">=</span> <span class="n">BlendWeightCurve</span><span class="o">-&gt;</span><span class="n">GetFloatValue</span><span class="p">(</span><span class="n">mCurveTime</span><span class="p">);</span>

    <span class="k">if</span> <span class="p">(</span><span class="n">CurveName</span> <span class="o">==</span> <span class="n">NAME_None</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">return</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="c1">// Update modify curve value</span>
    <span class="n">mModifyCurve</span><span class="p">.</span><span class="n">CurveMap</span><span class="p">.</span><span class="n">FindOrAdd</span><span class="p">(</span><span class="n">CurveName</span><span class="p">)</span> <span class="o">=</span> <span class="n">mBlend</span><span class="p">.</span><span class="n">Alpha</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>All that remains is for users to use our new Anim Node and connect some animations to it. Clicking on the new <strong>Blend by Curve</strong> node will show the Curve asset reference in the Details panel. Our update function will evaluate the curve over time and set the blend weight to our internal Blend node. Note that I renamed the node title from NestedNodes to Blend by Curve to make it fancier.</p>

<div class="image-container">
    <div class="Container">
        <div class="Content">
            <video class="audiovisual" controls="" autoplay="autoplay" loop="loop" style="width: 100%">
                <source src="/videos/nested-nodes-abp.mp4" type="video/mp4" />
            </video>            
        </div>
    </div>
    <span class="caption" style="font-size: 80%"><i></i></span>
</div>]]></content><author><name>Sergio Basurco</name></author><category term="unreal" /><category term="animation" /><category term="code" /><summary type="html"><![CDATA[Epicmetheus created Blueprints to resemble Code. C++, king of Olympus and ruler of all Code, deemed this as a transgression. Living a happy and simple life, Blueprints, weak and hideous as they are, still harbor dreams of one day rivaling the power of C++ himself. They often spend their days whimsically playing with us, mere mortals. It is, for this very reason, that C++ despises Blueprints and looks down on them from the heights of Mount Performance.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://chuckleplant.github.io/img/600/hades-nodes.png" /><media:content medium="image" url="https://chuckleplant.github.io/img/600/hades-nodes.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Tapetum Lucidum</title><link href="https://chuckleplant.github.io/2023/10/02/tapetum-lucidum.html" rel="alternate" type="text/html" title="Tapetum Lucidum" /><published>2023-10-02T00:00:00+02:00</published><updated>2023-10-02T00:00:00+02:00</updated><id>https://chuckleplant.github.io/2023/10/02/tapetum-lucidum</id><content type="html" xml:base="https://chuckleplant.github.io/2023/10/02/tapetum-lucidum.html"><![CDATA[<p><a href="https://store.steampowered.com/app/2206210/GYLT/">Gylt</a> was the first game I worked on. It was a spooky one, the art style inspired by Laika movies (Coraline, Kubo). Every now and then you could find these weird looking tentacles with huge eyes pulsating in the darkness. They were called The Observers.</p>

<p>One day, while playing the game, I walked into Bachman School. The game took place mostly at night time. There is something already terrifying about high schools at night. Right after you walk in through the main entrance, there is a hallway. You can barely see anything and once you’re deep into the room you can start to see a group of Observers blocking your path.</p>

<p>At this point in the game I already had my flashlight with me. The flashlight was Sally’s main weapon against, well, darkness. And I had a little aha moment. <strong>It would be great if I could already see moving eyes glowing in the darkness when I first walked by that gloomy corridor</strong>. This simple and insignificant idea took me on a developer side-quest.</p>

<p>First I pestered my lead Raul, who brushed it off telling me that there were other priorities and that it wasn’t our department. Fair enough. Later I asked Simon, who was the lead VFX for the project. He was on board but told me “I like the idea buddy, but this needs to be approved by the art director”. Alright then, a few days later I found our art director Oscar and I gave him a little pitch. I even did some research and found that this eye glow is called <a href="https://en.wikipedia.org/wiki/Tapetum_lucidum"><em>Tapetum Lucidum</em></a>.</p>

<div class="image-container">
    <div class="Container">
        <div class="Content">
            <img class="audiovisual" src="/images/racheye.jpg" alt="Tapetum Lucidum is a layer of tissue in the eye that reflects visible light. They used a cool practical effect in Blade Runner to capture this without any CGI." style="width: auto;" />
        </div>
    </div>
    <span class="caption" style="font-size: 80%"><i>Tapetum Lucidum is a layer of tissue in the eye that reflects visible light. They used a cool practical effect in Blade Runner to capture this without any CGI.</i></span>
</div>

<p>Oscar finally gave in and gave me a solid <em>maybe</em>. It certainly wasn’t the first thing on his list. This was <strong>outrageous</strong>. How could we have huge eyes, a flashlight as the main weapon, and not have this!? I sat on it for a few days until it dawned on me that I could just go and do it myself.</p>

<p>It was a nice excuse to toy with materials. The logic behind it was quite simple, if the light source and the Observer’s eyes aligned with the camera’s forward vector, the eye then can reflect back light towards the camera and have a slight glow. Nothing a dot product and an emissive material cannot fix.</p>

<div class="image-container">
    <div class="Container">
        <div class="Content">
            <img class="audiovisual" src="/images/material-tapetum-mockup.png" alt="You've probably seen reflective tape in those construction worker vests. The idea here is the same. If light source direction aligns with your eye, the tapetum will bounce the light back to you." style="width: auto;" />
        </div>
    </div>
    <span class="caption" style="font-size: 80%"><i>You've probably seen reflective tape in those construction worker vests. The idea here is the same. If light source direction aligns with your eye, the tapetum will bounce the light back to you.</i></span>
</div>

<p>I showed it to Simon and he was into it. He was visibly amused by a newly hired gameplay programmer showing him a rudimentary visual effect. He even gave me some feedback and we iterated it for a while. I was working on this separate dark level when I found a few minutes to spare. He later kindly took the material and gave it some magic VFX touches and <em>voilà</em>, it was in the game.</p>

<div class="image-container">
    <div class="Container">
        <div class="Content">
            <img class="audiovisual" src="/images/tapetum-draft-1.png" alt="Tapetum Lucidum effect just as it appears in the released game. It's very subtle." style="width: auto;" />
        </div>
    </div>
    <span class="caption" style="font-size: 80%"><i>Tapetum Lucidum effect just as it appears in the released game. It's very subtle.</i></span>
</div>

<p>It’s still one of my favorite game dev moments. Something sparks your imagination and once an idea forms it’s hard for you to let it go. <em>An idea is like a virus, resilient, highly contagious</em>. I really hope someone noticed while playing the game. I had a blast with this tiny feature.</p>

<p>Always use a prototype to sell your idea.</p>]]></content><author><name>Sergio Basurco</name></author><category term="story" /><category term="games" /><summary type="html"><![CDATA[Gylt was the first game I worked at. It was a spooky one, the art style inspired by Laika movies (Coraline, Kubo). Every now and then you could find these weird looking tentacles with huge eyes pulsating in the darkness. They were called The Observers.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://chuckleplant.github.io/img/600/racheye.jpg" /><media:content medium="image" url="https://chuckleplant.github.io/img/600/racheye.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Tequila Doodles</title><link href="https://chuckleplant.github.io/2022/09/21/tequila-doodles.html" rel="alternate" type="text/html" title="Tequila Doodles" /><published>2022-09-21T00:00:00+02:00</published><updated>2022-09-21T00:00:00+02:00</updated><id>https://chuckleplant.github.io/2022/09/21/tequila-doodles</id><content type="html" xml:base="https://chuckleplant.github.io/2022/09/21/tequila-doodles.html"><![CDATA[<p>Little doodles that I drew while working at Tequila Works in Madrid. I blame compilation times and a cloud of creativity floating around the office. Some are related to Gylt, a game we shipped for Google Stadia. Others are just rough drawings made absent-mindedly.</p>

<div class="pig-gallery" id="pig"></div>
<script src="/js/plugins/pig/src/pig.min.js"></script>
<script>
                              var imageData = [{filename: "Tequila Doodles/Springy.jpg", aspectRatio: 0.75, url: "/img/albums/Tequila Doodles/Springy/"},{filename: "Tequila Doodles/Surrounded.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Tequila Doodles/Surrounded/"},{filename: "Tequila Doodles/UI Wedges.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Tequila Doodles/UI-Wedges/"},{filename: "Tequila Doodles/Door.jpg", aspectRatio: 0.75, url: "/img/albums/Tequila Doodles/Door/"},{filename: "Tequila Doodles/Ball Hand.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Tequila Doodles/Ball-Hand/"},{filename: "Tequila Doodles/Twitter.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Tequila Doodles/Twitter/"},{filename: "Tequila Doodles/Doggo.jpg", aspectRatio: 0.75, url: "/img/albums/Tequila Doodles/Doggo/"},{filename: "Tequila Doodles/Mario Maybe.jpg", aspectRatio: 0.75, url: "/img/albums/Tequila Doodles/Mario-Maybe/"},{filename: "Tequila Doodles/Earth.jpg", aspectRatio: 0.75, url: "/img/albums/Tequila Doodles/Earth/"},{filename: "Tequila Doodles/Batman.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Tequila Doodles/Batman/"},{filename: "Tequila Doodles/Architecture.jpg", aspectRatio: 0.75, url: "/img/albums/Tequila Doodles/Architecture/"},{filename: "Tequila Doodles/Pinky.jpg", aspectRatio: 0.75, url: "/img/albums/Tequila Doodles/Pinky/"},{filename: "Tequila Doodles/Avocadudes.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Tequila Doodles/Avocadudes/"},{filename: "Tequila Doodles/Eyescrew.jpg", aspectRatio: 0.75, url: "/img/albums/Tequila Doodles/Eyescrew/"},{filename: "Tequila Doodles/Eye in mouth.jpg", aspectRatio: 0.75, url: "/img/albums/Tequila Doodles/Eye-in-mouth/"},{filename: "Tequila Doodles/Plane.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Tequila Doodles/Plane/"},{filename: "Tequila Doodles/Pyramidst.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Tequila Doodles/Pyramidst/"},{filename: "Tequila Doodles/Aboatcado.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Tequila Doodles/Aboatcado/"},{filename: "Tequila Doodles/Chachacha.jpg", aspectRatio: 0.75, url: "/img/albums/Tequila Doodles/Chachacha/"},{filename: "Tequila Doodles/Battery.jpg", aspectRatio: 0.75, url: "/img/albums/Tequila Doodles/Battery/"},{filename: "Tequila Doodles/Avocat.jpg", aspectRatio: 0.75, url: "/img/albums/Tequila Doodles/Avocat/"},{filename: "Tequila Doodles/In motion.jpg", aspectRatio: 0.75, url: "/img/albums/Tequila Doodles/In-motion/"},{filename: "Tequila Doodles/Smash.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Tequila Doodles/Smash/"},{filename: "Tequila Doodles/Lava Tears.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Tequila Doodles/Lava-Tears/"},{filename: "Tequila Doodles/Ventana Avise Cerrado.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Tequila Doodles/Ventana-Avise-Cerrado/"},{filename: "Tequila Doodles/Horns.jpg", aspectRatio: 0.75, url: "/img/albums/Tequila Doodles/Horns/"},{filename: "Tequila Doodles/Eye Closeup.jpg", aspectRatio: 0.75, url: "/img/albums/Tequila Doodles/Eye-Closeup/"},{filename: "Tequila Doodles/Angel Toad.jpg", aspectRatio: 0.75, url: "/img/albums/Tequila Doodles/Angel-Toad/"},{filename: "Tequila Doodles/Tilting Bird.jpg", aspectRatio: 0.75, url: "/img/albums/Tequila Doodles/Tilting-Bird/"},{filename: "Tequila Doodles/Hawkish.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Tequila Doodles/Hawkish/"},{filename: "Tequila Doodles/Plankton.jpg", aspectRatio: 0.75, url: "/img/albums/Tequila Doodles/Plankton/"},{filename: "Tequila Doodles/Dinosaur.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Tequila Doodles/Dinosaur/"},{filename: "Tequila Doodles/Puppet.jpg", aspectRatio: 0.75, url: "/img/albums/Tequila Doodles/Puppet/"},{filename: "Tequila Doodles/Fire Extinguisher Diegetic.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Tequila Doodles/Fire-Extinguisher-Diegetic/"},{filename: "Tequila Doodles/Devil.jpg", aspectRatio: 0.75, url: "/img/albums/Tequila Doodles/Devil/"},{filename: "Tequila Doodles/Gylt Title.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Tequila Doodles/Gylt-Title/"},{filename: "Tequila Doodles/Tattoed.jpg", aspectRatio: 0.75, url: "/img/albums/Tequila Doodles/Tattoed/"},{filename: "Tequila Doodles/Tapetum.jpg", aspectRatio: 0.75, url: "/img/albums/Tequila Doodles/Tapetum/"},{filename: "Tequila Doodles/Bowser Maybe.jpg", aspectRatio: 1.158483530142946, url: "/img/albums/Tequila Doodles/Bowser-Maybe/"},{filename: "Tequila Doodles/Bird.jpg", aspectRatio: 0.75, url: "/img/albums/Tequila Doodles/Bird/"},{filename: "Tequila Doodles/Gun Hands.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Tequila Doodles/Gun-Hands/"},{filename: "Tequila Doodles/Hide'n'seek.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Tequila Doodles/Hidenseek/"},{filename: "Tequila Doodles/Hammer Wedge.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Tequila Doodles/Hammer-Wedge/"},{filename: "Tequila Doodles/Rarebit.jpg", aspectRatio: 0.75, url: "/img/albums/Tequila Doodles/Rarebit/"},{filename: "Tequila Doodles/Snake Mammal.jpg", aspectRatio: 0.75, url: "/img/albums/Tequila Doodles/Snake-Mammal/"},{filename: "Tequila Doodles/Interesing Owl.jpg", aspectRatio: 0.75, url: "/img/albums/Tequila Doodles/Interesing-Owl/"},{filename: "Tequila Doodles/A dude.jpg", aspectRatio: 0.75, url: "/img/albums/Tequila Doodles/A-dude/"},{filename: "Tequila Doodles/Maze.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Tequila Doodles/Maze/"},{filename: "Tequila Doodles/Tarel.jpg", aspectRatio: 0.75, url: "/img/albums/Tequila Doodles/Tarel/"},{filename: "Tequila Doodles/Monkey Island-ish Pirate.jpg", aspectRatio: 0.75, url: "/img/albums/Tequila Doodles/Monkey-Island-ish-Pirate/"},{filename: "Tequila Doodles/Abstract ship.jpg", aspectRatio: 0.75, url: "/img/albums/Tequila Doodles/Abstract-ship/"},{filename: "Tequila Doodles/Rimewitness.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Tequila Doodles/Rimewitness/"},{filename: "Tequila Doodles/Banach-Tarski.jpg", aspectRatio: 0.75, url: "/img/albums/Tequila Doodles/Banach-Tarski/"},{filename: "Tequila Doodles/Parrot Viking.jpg", aspectRatio: 0.75, url: "/img/albums/Tequila Doodles/Parrot-Viking/"},{filename: "Tequila Doodles/Comic.jpg", aspectRatio: 0.75, url: "/img/albums/Tequila Doodles/Comic/"},{filename: "Tequila Doodles/Skulled.jpg", aspectRatio: 0.75, url: "/img/albums/Tequila Doodles/Skulled/"},{filename: "Tequila Doodles/Barbarian Blob.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Tequila Doodles/Barbarian-Blob/"},{filename: "Tequila Doodles/Psychic Cowboy Draft.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Tequila Doodles/Psychic-Cowboy-Draft/"},{filename: "Tequila Doodles/Psychic Cowboy.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Tequila Doodles/Psychic-Cowboy/"},{filename: "Tequila Doodles/Muay Thai Cleric.jpg", aspectRatio: 0.75, url: "/img/albums/Tequila Doodles/Muay-Thai-Cleric/"},];
                              var options = {
                                urlForSize: function(filename, size) {
                                  return '/img/' + size + '/' + filename;
                                },
                                figureTagName: "a",
                                transitionSpeed: 500,
                                getMinAspectRatio: function(lastWindowWidth) {
                                if (lastWindowWidth <= 640)  // Phones
                                  return 1;
                                else if (lastWindowWidth <= 1280)  // Tablets
                                  return 3;
                                else if (lastWindowWidth <= 1920)  // Laptops
                                  return 4;
                                return 5;  // Large desktops
                              },
                                spaceBetweenImages: 3,
                                getImageSize: function(lastWindowWidth) {
                                  return 250;
                                }
                                // ...
                              };
                          
                              var pig = new Pig(imageData, options).enable();
                            </script>]]></content><author><name>Sergio Basurco</name></author><category term="drawing" /><category term="gamedev" /><category term="album" /><category term="art" /><summary type="html"><![CDATA[Little doodles that I drew while working at Tequila Works in Madrid. I blame compilation times and a cloud of creativity floating around the office. Some are related to Gylt, a game we shipped for Google Stadia. Others are just rough drawings made absent-mindedly.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://chuckleplant.github.io/img/600/Smash.jpg" /><media:content medium="image" url="https://chuckleplant.github.io/img/600/Smash.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Glimpse from Spirited Away</title><link href="https://chuckleplant.github.io/2018/12/11/spirited-painting.html" rel="alternate" type="text/html" title="Glimpse from Spirited Away" /><published>2018-12-11T00:00:00+01:00</published><updated>2018-12-11T00:00:00+01:00</updated><id>https://chuckleplant.github.io/2018/12/11/spirited-painting</id><content type="html" xml:base="https://chuckleplant.github.io/2018/12/11/spirited-painting.html"><![CDATA[<p>This image appears within a long scene in which Chihiro takes a train. The scene gives the viewer a break and portrays the protagonist’s journey from childhood to adulthood.</p>

<p>This shot appears for just a few seconds. It’s a beautifully composed image that instantly takes you in and leaves you wondering.</p>

<p>A small cozy house in a lonely island. In the foreground we see a very welcoming scene, while in the back some dark clouds are creeping in. In the horizon, darkness and light meet separated by a very thin line.</p>

<div class="image-container">
    <div class="Container">
        <div class="Content">
            <img class="audiovisual" src="/images/spirited.png" alt="September 12th, 2018. 18x23cm. Acrylic on canvas." style="width: auto;" />
        </div>
    </div>
    <span class="caption" style="font-size: 80%"><i>September 12th, 2018. 18x23cm. Acrylic on canvas.</i></span>
</div>]]></content><author><name>Sergio Basurco</name></author><category term="painting" /><category term="art" /><category term="images" /><category term="movies" /><category term="acrylic" /><summary type="html"><![CDATA[This image appears within a long scene in which Chihiro takes a train. The scene gives the viewer a break and portrays the protagonist’s journey from childhood to adulthood.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://chuckleplant.github.io/img/600/spirited.png" /><media:content medium="image" url="https://chuckleplant.github.io/img/600/spirited.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Jekyll pig image gallery</title><link href="https://chuckleplant.github.io/2018/08/06/pig-img-gallery.html" rel="alternate" type="text/html" title="Jekyll pig image gallery" /><published>2018-08-06T00:00:00+02:00</published><updated>2018-08-06T00:00:00+02:00</updated><id>https://chuckleplant.github.io/2018/08/06/pig-img-gallery</id><content type="html" xml:base="https://chuckleplant.github.io/2018/08/06/pig-img-gallery.html"><![CDATA[<p>A few posts ago I added image galleries. Initially I used the <a href="https://github.com/aerobless/jekyll-photo-gallery">Jekyll Photo Gallery</a> (JPG) by Theo Winter, which had many of the features I wanted. I liked specially the generation of a unique page for each photo and the google maps thumbnail generation. The JPG used the <a href="http://miromannino.github.io/Justified-Gallery/">Justified Gallery</a> by Miro Mannino to show a grid of images.</p>

<p>I noticed that for a great amount of images the site took too much time to load. After a small search I found the <a href="https://github.com/schlosser/pig.js">Progressive Image Grid</a> (PIG) by Dan Schlosser, this gallery could load an absurd amount of images without much effort. It does this by loading and unloading the images, buffering them based on the user’s browsing direction.</p>

<h2 id="changes-to-jekyll-photo-gallery">Changes to Jekyll Photo Gallery</h2>

<p>First I made a few changes to the <code class="language-plaintext highlighter-rouge">photo.html</code> layout from the original JPG. I changed where the map was placed and increased the map size for a higher resolution view. I also made the elements responsive and added a few icons based on the flickr layout.</p>

<p>The image layout acts in a similar way to how YouTube does for videos, it keeps a maximum height, which responds to the user shrinking the window width. I also added arrows on each side for feedback, this way the users know they can navigate by clicking.</p>

<div class="image-container">
    <div class="Container">
        <div class="Content">
            <img class="audiovisual" src="/images/photo-page.png" alt="The photo page shows all relevant information from each image. The map static image was changed to occupy the blog's wrapper width." style="width: auto;" />
        </div>
    </div>
    <span class="caption" style="font-size: 80%"><i>The photo page shows all relevant information from each image. The map static image was changed to occupy the blog's wrapper width.</i></span>
</div>

<p>A big change on performance was precomputing all the exif data to be used in the photo page. In the original JPG these were called via Liquid script when generating the page. This happened each time Jekyll was built. Given that I made a script to set up photos and thumbnails in Python, I also made it so that all the required exif data was pregenerated just once. It is saved to a YAML file and used directly by Jekyll. The site generation time was basically halved by this.</p>

<h2 id="changes-to-progressive-image-grid">Changes to Progressive Image Grid</h2>

<p>The first challenge was to make PIG usable from Jekyll. Luckily JPG had already set the pathway to do this. I only had to replace the Justified Gallery code with PIG code.</p>

<p>For the actual PIG code I did have to make the images clickable, I added a <code class="language-plaintext highlighter-rouge">url</code> field for the images list. Then in JavaScript I created a <code class="language-plaintext highlighter-rouge">div</code> element to act as the captions. I shamelessly copied the captions from Justified Gallery, including the hover behaviour and animations.</p>

<h2 id="how-to-use-this-in-your-jekyll-site">How to use this in your Jekyll site</h2>

<p>If you’d like to use this image gallery you can grab <a href="https://github.com/chuckleplant/blog/tree/pig-gallery">this commit</a>. It will come in handy in case I change the theme or add too many custom features to my blog. At the moment of writing I’m using the default Jekyll minimal theme.</p>

<p>All you need to do to set it up is place your images in the following folder structure:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>./
    img/
        albums/
            Hawaii/
            Alderaan/
            Another Album/
            ...
</code></pre></div></div>

<p>Then run the <code class="language-plaintext highlighter-rouge">setup-photos.py</code> script, in the scripts folder. This script will do the following:</p>

<ul>
  <li>Rotate your images according to the orientation specified by the metadata.</li>
  <li>Create thumbnails of height 20px and 250px, used by the PIG code.</li>
  <li>Create a YAML file for each album, describing all the images.</li>
  <li>All metadata found in the EXIF of your JPEGs will be written to the YAML descriptor. Later to be used in the photo page.</li>
</ul>

<p>Use the following snippet to insert an album anywhere in a post.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> { %includeGallery ALBUM_ID% }
</code></pre></div></div>

<p>That should be it, run <code class="language-plaintext highlighter-rouge">jekyll serve --watch</code> to generate your site and you should be able to see your albums.</p>]]></content><author><name>Sergio Basurco</name></author><category term="meta" /><category term="jekyll" /><category term="code" /><category term="blog" /><summary type="html"><![CDATA[A few posts ago I added image galleries. Initially I used the Jekyll Photo Gallery (JPG) by Theo Winter, which had many of the features I wanted. I liked specially the generation of a unique page for each photo and the google maps thumbnail generation. The JPG used the Justified Gallery by Miro Mannino to show a grid of images.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://chuckleplant.github.io/img/600/photo-page.png" /><media:content medium="image" url="https://chuckleplant.github.io/img/600/photo-page.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Trip to Japan</title><link href="https://chuckleplant.github.io/2018/07/23/japan-trip.html" rel="alternate" type="text/html" title="Trip to Japan" /><published>2018-07-23T00:00:00+02:00</published><updated>2018-07-23T00:00:00+02:00</updated><id>https://chuckleplant.github.io/2018/07/23/japan-trip</id><content type="html" xml:base="https://chuckleplant.github.io/2018/07/23/japan-trip.html"><![CDATA[<p>I went to Japan last year. Precisely for this trip I bought a decent digital camera and started taking pictures as a hobby. I spent some time editing some of the photos, here’s a small selection of my favourites.</p>

<div class="pig-gallery" id="pig"></div>
<script src="/js/plugins/pig/src/pig.min.js"></script>
<script>
                              var imageData = [{filename: "Japan/P8180162.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8180162/"},{filename: "Japan/P8200327.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8200327/"},{filename: "Japan/P8200926.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8200926/"},{filename: "Japan/P8200943.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8200943/"},{filename: "Japan/P8200949.jpg", aspectRatio: 0.7503751875937968, url: "/img/albums/Japan/P8200949/"},{filename: "Japan/P8201052.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8201052/"},{filename: "Japan/P8211215.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8211215/"},{filename: "Japan/P8211229.jpg", aspectRatio: 1.6733931240657698, url: "/img/albums/Japan/P8211229/"},{filename: "Japan/P8211572.jpg", aspectRatio: 1.5466954022988506, url: "/img/albums/Japan/P8211572/"},{filename: "Japan/P8221932.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8221932/"},{filename: "Japan/P8221953.jpg", aspectRatio: 1.4574616457461647, url: "/img/albums/Japan/P8221953/"},{filename: "Japan/P8221977.jpg", aspectRatio: 1.33422281521014, url: "/img/albums/Japan/P8221977/"},{filename: "Japan/P8222072.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8222072/"},{filename: "Japan/P8222094.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8222094/"},{filename: "Japan/P8222140.jpg", aspectRatio: 0.7503751875937968, url: "/img/albums/Japan/P8222140/"},{filename: "Japan/P8222148.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8222148/"},{filename: "Japan/P8232150.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8232150/"},{filename: "Japan/P8232153.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8232153/"},{filename: "Japan/P8232222.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8232222/"},{filename: "Japan/P8232349.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8232349/"},{filename: "Japan/P8232374.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8232374/"},{filename: "Japan/P8232438.jpg", aspectRatio: 1.2598833441348023, url: "/img/albums/Japan/P8232438/"},{filename: "Japan/P8242474.jpg", aspectRatio: 1.2242811501597444, url: "/img/albums/Japan/P8242474/"},{filename: "Japan/P8242484.jpg", aspectRatio: 1.1807909604519775, url: "/img/albums/Japan/P8242484/"},{filename: "Japan/P8242499.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8242499/"},{filename: "Japan/P8242503.jpg", aspectRatio: 1.4705882352941178, url: "/img/albums/Japan/P8242503/"},{filename: "Japan/P8240105.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8240105/"},{filename: "Japan/P8240324.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8240324/"},{filename: "Japan/P8250666.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8250666/"},{filename: "Japan/P8250674.jpg", aspectRatio: 1.167186525265128, url: "/img/albums/Japan/P8250674/"},{filename: "Japan/P8250678.jpg", aspectRatio: 1.2855271774721677, url: "/img/albums/Japan/P8250678/"},{filename: "Japan/P8250872.jpg", aspectRatio: 1.2062182741116751, url: "/img/albums/Japan/P8250872/"},{filename: "Japan/P8250874.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8250874/"},{filename: "Japan/P8250879.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8250879/"},{filename: "Japan/P8250899.jpg", aspectRatio: 1.333555703802535, url: "/img/albums/Japan/P8250899/"},{filename: "Japan/P8250921.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8250921/"},{filename: "Japan/P8250953.jpg", aspectRatio: 0.9959654178674352, url: "/img/albums/Japan/P8250953/"},{filename: "Japan/P8250959.jpg", aspectRatio: 1.3519140362659503, url: "/img/albums/Japan/P8250959/"},{filename: "Japan/P8250960.jpg", aspectRatio: 0.75, url: "/img/albums/Japan/P8250960/"},{filename: "Japan/P8250987.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8250987/"},{filename: "Japan/P8250991.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8250991/"},{filename: "Japan/P8251020.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8251020/"},{filename: "Japan/P8251023.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8251023/"},{filename: "Japan/P8260006.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8260006/"},{filename: "Japan/P8260051.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8260051/"},{filename: "Japan/P8260118.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8260118/"},{filename: "Japan/P8260207.jpg", aspectRatio: 0.7003383276945384, url: "/img/albums/Japan/P8260207/"},{filename: "Japan/P8260208.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8260208/"},{filename: "Japan/P8260228.jpg", aspectRatio: 1.7868725868725868, url: "/img/albums/Japan/P8260228/"},{filename: "Japan/P8260261.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8260261/"},{filename: "Japan/P8260326.jpg", aspectRatio: 1.40218878248974, url: "/img/albums/Japan/P8260326/"},{filename: "Japan/P8260339.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8260339/"},{filename: "Japan/P8260340.jpg", aspectRatio: 1.6114369501466275, url: "/img/albums/Japan/P8260340/"},{filename: "Japan/P8260343.jpg", aspectRatio: 0.8661290322580645, url: "/img/albums/Japan/P8260343/"},{filename: "Japan/P8260393.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8260393/"},{filename: "Japan/P8260398.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8260398/"},{filename: "Japan/P8260441.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8260441/"},{filename: "Japan/P8260464.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8260464/"},{filename: "Japan/P8260471.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8260471/"},{filename: "Japan/P8260565.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8260565/"},{filename: "Japan/P8260567.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8260567/"},{filename: "Japan/P8260574.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8260574/"},{filename: "Japan/P8260620.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8260620/"},{filename: "Japan/P8260644.jpg", aspectRatio: 1.333555703802535, url: "/img/albums/Japan/P8260644/"},{filename: "Japan/P8260651.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8260651/"},{filename: "Japan/P8260653.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8260653/"},{filename: "Japan/P8260654.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8260654/"},{filename: "Japan/P8260689.jpg", aspectRatio: 1.33422281521014, url: "/img/albums/Japan/P8260689/"},{filename: "Japan/P8270051.jpg", aspectRatio: 1.988599348534202, url: "/img/albums/Japan/P8270051/"},{filename: "Japan/P8270058.jpg", aspectRatio: 1.4908321579689703, url: "/img/albums/Japan/P8270058/"},{filename: "Japan/P8270059.jpg", aspectRatio: 1.902788844621514, url: "/img/albums/Japan/P8270059/"},{filename: "Japan/P8270066.jpg", aspectRatio: 0.75, url: "/img/albums/Japan/P8270066/"},{filename: "Japan/P8270071.jpg", aspectRatio: 1.4806746310611385, url: "/img/albums/Japan/P8270071/"},{filename: "Japan/P8270072.jpg", aspectRatio: 1.3139072847682118, url: "/img/albums/Japan/P8270072/"},{filename: "Japan/P8270096.jpg", aspectRatio: 0.9828178694158075, url: "/img/albums/Japan/P8270096/"},{filename: "Japan/P8270097.jpg", aspectRatio: 1.3998632946001368, url: "/img/albums/Japan/P8270097/"},{filename: "Japan/P8270113.jpg", aspectRatio: 0.7502502502502503, url: "/img/albums/Japan/P8270113/"},{filename: "Japan/P8270114.jpg", aspectRatio: 0.75, url: "/img/albums/Japan/P8270114/"},{filename: "Japan/P8270117.jpg", aspectRatio: 1.0400707130229818, url: "/img/albums/Japan/P8270117/"},{filename: "Japan/P8270123.jpg", aspectRatio: 1.333555703802535, url: "/img/albums/Japan/P8270123/"},{filename: "Japan/P8270147.jpg", aspectRatio: 1.639792899408284, url: "/img/albums/Japan/P8270147/"},{filename: "Japan/P8270170.jpg", aspectRatio: 0.75, url: "/img/albums/Japan/P8270170/"},{filename: "Japan/P8270264.jpg", aspectRatio: 1.0, url: "/img/albums/Japan/P8270264/"},{filename: "Japan/P8270280.jpg", aspectRatio: 0.762481089258699, url: "/img/albums/Japan/P8270280/"},{filename: "Japan/P8270286.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8270286/"},{filename: "Japan/P8270287.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8270287/"},{filename: "Japan/P8270291.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8270291/"},{filename: "Japan/P8270294.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8270294/"},{filename: "Japan/P8270298.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8270298/"},{filename: "Japan/P8270319.jpg", aspectRatio: 1.33422281521014, url: "/img/albums/Japan/P8270319/"},{filename: "Japan/P8270323.jpg", aspectRatio: 1.7788906009244991, url: "/img/albums/Japan/P8270323/"},{filename: "Japan/P8270330.jpg", aspectRatio: 1.3442732752846618, url: "/img/albums/Japan/P8270330/"},{filename: "Japan/P8270346.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8270346/"},{filename: "Japan/P8270427.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8270427/"},{filename: "Japan/P8270433.jpg", aspectRatio: 1.0509177027827117, url: "/img/albums/Japan/P8270433/"},{filename: "Japan/P8270436.jpg", aspectRatio: 1.4434420541290771, url: "/img/albums/Japan/P8270436/"},{filename: "Japan/P8270439.jpg", aspectRatio: 1.0069565217391305, url: "/img/albums/Japan/P8270439/"},{filename: "Japan/P8270535.jpg", aspectRatio: 1.5231646471846043, url: "/img/albums/Japan/P8270535/"},{filename: "Japan/P8280182.jpg", aspectRatio: 0.75, url: "/img/albums/Japan/P8280182/"},{filename: "Japan/P8280184.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8280184/"},{filename: "Japan/P8280217.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8280217/"},{filename: "Japan/P8280226.jpg", aspectRatio: 0.75, url: "/img/albums/Japan/P8280226/"},{filename: "Japan/P8280264.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8280264/"},{filename: "Japan/P8280333.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8280333/"},{filename: "Japan/P8280356.jpg", aspectRatio: 0.75, url: "/img/albums/Japan/P8280356/"},{filename: "Japan/P8280415.jpg", aspectRatio: 1.2891803278688525, url: "/img/albums/Japan/P8280415/"},{filename: "Japan/P8280426.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8280426/"},{filename: "Japan/P8280427.jpg", aspectRatio: 0.75, url: "/img/albums/Japan/P8280427/"},{filename: "Japan/P8280432.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8280432/"},{filename: "Japan/P8280440.jpg", aspectRatio: 0.75, url: "/img/albums/Japan/P8280440/"},{filename: "Japan/P8280449.jpg", aspectRatio: 1.6995481927710843, url: "/img/albums/Japan/P8280449/"},{filename: "Japan/P8280455.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8280455/"},{filename: "Japan/P8280463.jpg", aspectRatio: 1.304749340369393, url: "/img/albums/Japan/P8280463/"},{filename: "Japan/P8280502.jpg", aspectRatio: 0.75, url: "/img/albums/Japan/P8280502/"},{filename: "Japan/P8280582.jpg", aspectRatio: 1.3989071038251366, url: "/img/albums/Japan/P8280582/"},{filename: "Japan/P8290612.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8290612/"},{filename: "Japan/P8290692.jpg", aspectRatio: 1.33422281521014, url: "/img/albums/Japan/P8290692/"},{filename: "Japan/P8290705.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8290705/"},{filename: "Japan/P8290728.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8290728/"},{filename: "Japan/P8290732.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8290732/"},{filename: "Japan/P8290783.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8290783/"},{filename: "Japan/P8290805.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8290805/"},{filename: "Japan/P8290837.jpg", aspectRatio: 0.7502502502502503, url: "/img/albums/Japan/P8290837/"},{filename: "Japan/P8290893.jpg", aspectRatio: 1.1432983323038912, url: "/img/albums/Japan/P8290893/"},{filename: "Japan/P8290901.jpg", aspectRatio: 1.2833769633507854, url: "/img/albums/Japan/P8290901/"},{filename: "Japan/P8290967.jpg", aspectRatio: 1.333555703802535, url: "/img/albums/Japan/P8290967/"},{filename: "Japan/P8290989.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8290989/"},{filename: "Japan/P8291015.jpg", aspectRatio: 0.9002739726027398, url: "/img/albums/Japan/P8291015/"},{filename: "Japan/P8291035.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8291035/"},{filename: "Japan/P8291051.jpg", aspectRatio: 0.75, url: "/img/albums/Japan/P8291051/"},{filename: "Japan/P8291077.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8291077/"},{filename: "Japan/P8291091.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8291091/"},{filename: "Japan/P8291105.jpg", aspectRatio: 0.75, url: "/img/albums/Japan/P8291105/"},{filename: "Japan/P8291106.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8291106/"},{filename: "Japan/P8291112.jpg", aspectRatio: 0.75, url: "/img/albums/Japan/P8291112/"},{filename: "Japan/P8291115.jpg", aspectRatio: 1.33422281521014, url: "/img/albums/Japan/P8291115/"},{filename: "Japan/P8291127.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8291127/"},{filename: "Japan/P8291162.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8291162/"},{filename: "Japan/P8291176.jpg", aspectRatio: 0.75, url: "/img/albums/Japan/P8291176/"},{filename: "Japan/P8291177.jpg", aspectRatio: 0.75, url: "/img/albums/Japan/P8291177/"},{filename: "Japan/P8291178.jpg", aspectRatio: 0.75, url: "/img/albums/Japan/P8291178/"},{filename: "Japan/P8291187.jpg", aspectRatio: 0.75, url: "/img/albums/Japan/P8291187/"},{filename: "Japan/P8291219.jpg", aspectRatio: 1.7788906009244991, url: "/img/albums/Japan/P8291219/"},{filename: "Japan/P8300011.jpg", aspectRatio: 2.6616399622997173, url: "/img/albums/Japan/P8300011/"},{filename: "Japan/P8310047.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8310047/"},{filename: "Japan/P8310060.jpg", aspectRatio: 1.7788906009244991, url: "/img/albums/Japan/P8310060/"},{filename: "Japan/P8310091.jpg", aspectRatio: 0.75, url: "/img/albums/Japan/P8310091/"},{filename: "Japan/P8310092.jpg", aspectRatio: 1.7788906009244991, url: "/img/albums/Japan/P8310092/"},{filename: "Japan/P8310108.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8310108/"},{filename: "Japan/P8310210.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8310210/"},{filename: "Japan/P8310218.jpg", aspectRatio: 1.333555703802535, url: "/img/albums/Japan/P8310218/"},{filename: "Japan/P8310224.jpg", aspectRatio: 1.3373413493653974, url: "/img/albums/Japan/P8310224/"},{filename: "Japan/P8310250.jpg", aspectRatio: 1.33422281521014, url: "/img/albums/Japan/P8310250/"},{filename: "Japan/P8310270.jpg", aspectRatio: 1.0, url: "/img/albums/Japan/P8310270/"},{filename: "Japan/P8310274.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P8310274/"},{filename: "Japan/P9010231.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9010231/"},{filename: "Japan/P9010238.jpg", aspectRatio: 1.4492350486787204, url: "/img/albums/Japan/P9010238/"},{filename: "Japan/P9010258.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9010258/"},{filename: "Japan/P9010330.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9010330/"},{filename: "Japan/P9010345.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9010345/"},{filename: "Japan/P9010346.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9010346/"},{filename: "Japan/P9010347.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9010347/"},{filename: "Japan/P9010364.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9010364/"},{filename: "Japan/P9010375.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9010375/"},{filename: "Japan/P9010377.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9010377/"},{filename: "Japan/P9010378.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9010378/"},{filename: "Japan/P9010399.jpg", aspectRatio: 1.1972187104930467, url: "/img/albums/Japan/P9010399/"},{filename: "Japan/P9010403.jpg", aspectRatio: 0.7503751875937968, url: "/img/albums/Japan/P9010403/"},{filename: "Japan/P9010410.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9010410/"},{filename: "Japan/P9010428.jpg", aspectRatio: 0.75, url: "/img/albums/Japan/P9010428/"},{filename: "Japan/P9010488.jpg", aspectRatio: 0.75, url: "/img/albums/Japan/P9010488/"},{filename: "Japan/P9010562.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9010562/"},{filename: "Japan/P9010565.jpg", aspectRatio: 2.519706691109074, url: "/img/albums/Japan/P9010565/"},{filename: "Japan/P9010587.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9010587/"},{filename: "Japan/P9010611.jpg", aspectRatio: 0.75, url: "/img/albums/Japan/P9010611/"},{filename: "Japan/P9010634.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9010634/"},{filename: "Japan/P9010698.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9010698/"},{filename: "Japan/P9010755.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9010755/"},{filename: "Japan/P9010796.jpg", aspectRatio: 1.0, url: "/img/albums/Japan/P9010796/"},{filename: "Japan/P9010812.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9010812/"},{filename: "Japan/P9010816.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9010816/"},{filename: "Japan/P9010818.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9010818/"},{filename: "Japan/P9020857.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9020857/"},{filename: "Japan/P9020902.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9020902/"},{filename: "Japan/P9020915.jpg", aspectRatio: 1.6114369501466275, url: "/img/albums/Japan/P9020915/"},{filename: "Japan/P9020010.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9020010/"},{filename: "Japan/P9030026.jpg", aspectRatio: 0.75, url: "/img/albums/Japan/P9030026/"},{filename: "Japan/P9030031.jpg", aspectRatio: 1.4757894736842105, url: "/img/albums/Japan/P9030031/"},{filename: "Japan/P9030053.jpg", aspectRatio: 1.0394581861012957, url: "/img/albums/Japan/P9030053/"},{filename: "Japan/P9030060.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9030060/"},{filename: "Japan/P9030066.jpg", aspectRatio: 1.2271273192578376, url: "/img/albums/Japan/P9030066/"},{filename: "Japan/P9030098.jpg", aspectRatio: 0.75, url: "/img/albums/Japan/P9030098/"},{filename: "Japan/P9030281.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9030281/"},{filename: "Japan/P9030294.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9030294/"},{filename: "Japan/P9030310.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9030310/"},{filename: "Japan/P9030311.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9030311/"},{filename: "Japan/P9040387.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9040387/"},{filename: "Japan/P9040391.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9040391/"},{filename: "Japan/P9040393.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9040393/"},{filename: "Japan/P9040400.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9040400/"},{filename: "Japan/P9040423.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9040423/"},{filename: "Japan/P9040447.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9040447/"},{filename: "Japan/P9040450.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9040450/"},{filename: "Japan/P9040457.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9040457/"},{filename: "Japan/P9040466.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9040466/"},{filename: "Japan/P9040555.jpg", aspectRatio: 0.75, url: "/img/albums/Japan/P9040555/"},{filename: "Japan/P9040561.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9040561/"},{filename: "Japan/P9040564.jpg", aspectRatio: 0.75, url: "/img/albums/Japan/P9040564/"},{filename: "Japan/P9050019.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9050019/"},{filename: "Japan/P9050042.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9050042/"},{filename: "Japan/P9050058.jpg", aspectRatio: 1.5873362445414847, url: "/img/albums/Japan/P9050058/"},{filename: "Japan/P9050089.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9050089/"},{filename: "Japan/P9050125.jpg", aspectRatio: 1.2096569250317661, url: "/img/albums/Japan/P9050125/"},{filename: "Japan/P9050157.jpg", aspectRatio: 1.8957836117740652, url: "/img/albums/Japan/P9050157/"},{filename: "Japan/P9050174.jpg", aspectRatio: 0.9839541547277937, url: "/img/albums/Japan/P9050174/"},{filename: "Japan/P9050192.jpg", aspectRatio: 1.1821608040201006, url: "/img/albums/Japan/P9050192/"},{filename: "Japan/P9050276.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9050276/"},{filename: "Japan/P9050337.jpg", aspectRatio: 1.0929951690821256, url: "/img/albums/Japan/P9050337/"},{filename: "Japan/P9050338.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9050338/"},{filename: "Japan/P9050379.jpg", aspectRatio: 1.5163584637268848, url: "/img/albums/Japan/P9050379/"},{filename: "Japan/P9050387.jpg", aspectRatio: 1.1321450522433927, url: "/img/albums/Japan/P9050387/"},{filename: "Japan/P9050392.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9050392/"},{filename: "Japan/P9050430.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9050430/"},{filename: "Japan/P9050431.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9050431/"},{filename: "Japan/P9050433.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9050433/"},{filename: "Japan/P9050475.jpg", aspectRatio: 0.7502502502502503, url: "/img/albums/Japan/P9050475/"},{filename: "Japan/P9050482.jpg", aspectRatio: 1.4968197879858658, url: "/img/albums/Japan/P9050482/"},{filename: "Japan/P9070510.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9070510/"},{filename: "Japan/P9070518.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9070518/"},{filename: "Japan/P9070530.jpg", aspectRatio: 1.5650289017341041, url: "/img/albums/Japan/P9070530/"},{filename: "Japan/P9070571.jpg", aspectRatio: 1.102486355366889, url: "/img/albums/Japan/P9070571/"},{filename: "Japan/P9070580.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9070580/"},{filename: "Japan/P9070585.jpg", aspectRatio: 1.33422281521014, url: "/img/albums/Japan/P9070585/"},{filename: "Japan/P9070588.jpg", aspectRatio: 1.8765822784810127, url: "/img/albums/Japan/P9070588/"},{filename: "Japan/P9080662.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9080662/"},{filename: "Japan/P9080693.jpg", aspectRatio: 2.037098103874691, url: "/img/albums/Japan/P9080693/"},{filename: "Japan/P9080714.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9080714/"},{filename: "Japan/P9080783.jpg", aspectRatio: 0.75, url: "/img/albums/Japan/P9080783/"},{filename: "Japan/P9080894.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9080894/"},{filename: "Japan/P9080963.jpg", aspectRatio: 0.75, url: "/img/albums/Japan/P9080963/"},{filename: "Japan/P9080985.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9080985/"},{filename: "Japan/P9080996.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9080996/"},{filename: "Japan/P9081042.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9081042/"},{filename: "Japan/P9081208.jpg", aspectRatio: 1.5138592750533049, url: "/img/albums/Japan/P9081208/"},{filename: "Japan/P9081213.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9081213/"},{filename: "Japan/P9081223.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9081223/"},{filename: "Japan/P9081306.jpg", aspectRatio: 0.75, url: "/img/albums/Japan/P9081306/"},{filename: "Japan/P9081355.jpg", aspectRatio: 1.4248275862068966, url: "/img/albums/Japan/P9081355/"},{filename: "Japan/P9091362.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9091362/"},{filename: "Japan/P9091364.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9091364/"},{filename: "Japan/P9091412.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9091412/"},{filename: "Japan/P9091420.jpg", aspectRatio: 0.75, url: "/img/albums/Japan/P9091420/"},{filename: "Japan/P9091435.jpg", aspectRatio: 1.33422281521014, url: "/img/albums/Japan/P9091435/"},{filename: "Japan/P9091446.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9091446/"},{filename: "Japan/P9091456.jpg", aspectRatio: 1.3333333333333333, url: "/img/albums/Japan/P9091456/"},];
                              var options = {
                                urlForSize: function(filename, size) {
                                  return '/img/' + size + '/' + filename;
                                },
                                figureTagName: "a",
                                transitionSpeed: 500,
                                getMinAspectRatio: function(lastWindowWidth) {
                                if (lastWindowWidth <= 640)  // Phones
                                  return 1;
                                else if (lastWindowWidth <= 1280)  // Tablets
                                  return 3;
                                else if (lastWindowWidth <= 1920)  // Laptops
                                  return 4;
                                return 5;  // Large desktops
                              },
                                spaceBetweenImages: 3,
                                getImageSize: function(lastWindowWidth) {
                                  return 250;
                                }
                                // ...
                              };
                          
                              var pig = new Pig(imageData, options).enable();
                            </script>]]></content><author><name>Sergio Basurco</name></author><category term="album" /><category term="photography" /><category term="japan" /><category term="world" /><summary type="html"><![CDATA[I went to Japan last year. Precisely for this trip I bought a decent digital camera and started taking pictures as a hobby. I spent some time editing some of the photos, here’s a small selection of my favourites.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://chuckleplant.github.io/img/600/P8260261.jpg" /><media:content medium="image" url="https://chuckleplant.github.io/img/600/P8260261.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Photo geotagging using your Google location history</title><link href="https://chuckleplant.github.io/2018/07/23/google-photos-geotag.html" rel="alternate" type="text/html" title="Photo geotagging using your Google location history" /><published>2018-07-23T00:00:00+02:00</published><updated>2018-07-23T00:00:00+02:00</updated><id>https://chuckleplant.github.io/2018/07/23/google-photos-geotag</id><content type="html" xml:base="https://chuckleplant.github.io/2018/07/23/google-photos-geotag.html"><![CDATA[<blockquote>
  <p>He who controls the past controls the future. He who controls the present controls the past.</p>

  <p>– George Orwell, 1984</p>
</blockquote>

<p><a href="https://github.com/chuckleplant/blog/blob/master/scripts/location-geotag.py">Here</a>’s a script that runs on Python that can add GPS tags to your photos (jpg) given your Google location history. You have to download the location history from <a href="https://takeout.google.com/">https://takeout.google.com/</a> and run:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python location-geotag.py <span class="nt">--dir</span> <span class="o">{</span>your photos directory<span class="o">}</span> <span class="nt">--json</span> <span class="o">{</span>your location <span class="nb">history</span><span class="o">}</span>
</code></pre></div></div>

<p>Do <strong>backup</strong> your photos before doing this, you may lose them.</p>

<h2 id="somebodys-watching-me">Somebody’s watching me</h2>

<p>I use Google Photos for keeping the thousands if not hundreds of thousands of pictures I’ve taken over the years. Unlimited storage (I love unlimited stuff) for the price of image compression and probably Google using your photos for machine learning, ads and other orwellian ends.</p>

<div class="image-container">
    <div class="Container">
        <div class="Content">
            <img class="audiovisual" src="/images/posts/geotag-gphotos.png" alt="Google Photos interface showing a map of where the photo was taken." style="width: auto;" />
        </div>
    </div>
    <span class="caption" style="font-size: 80%"><i>Google Photos interface showing a map of where the photo was taken.</i></span>
</div>

<p>One feature I like is geotagging. Google Photos will use your location history to deduce where the photo was taken. Then they’ll show you a nice map when visiting the image and you’ll go <em>‘Oh look I’ve been there!’</em></p>

<p>However, I noticed that when exporting the photos out of Google, you don’t get the approximate geotag as metadata in your JPEG. This bothers me because the image gallery I’m using also shows you a small map if the image has GPS data in it (<a href="/2018/07/23/japan-trip.html">check it out!</a>).</p>

<p>After some research I found that it’s actually not possible to export the geotags from Google Photos. I did find that you can actually download your whole location history, all the location data Google has on you. It’s a lot of data depending on how long you’ve used a smartphone.</p>

<div class="image-container">
    <div class="Container">
        <div class="Content">
            <img class="audiovisual" src="/images/posts/gdatum.png" alt="Get all the data Google has on you from [https://takeout.google.com/](https://takeout.google.com/). The list goes on and on." style="width: auto;" />
        </div>
    </div>
    <span class="caption" style="font-size: 80%"><i>Get all the data Google has on you from [https://takeout.google.com/](https://takeout.google.com/). The list goes on and on.</i></span>
</div>

<p>So I made a small script that adds the GPS information on any photo using your location history as input. It’s quite simple but works surprisingly well.</p>

<h2 id="script">Script</h2>

<p>The script is written in Python. My location history was around 200Mb, so I wanted an efficient way to search through the whole file.</p>

<p>The Google export looks like this:</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"locations"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"timestampMs"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="s2">"1532122858202"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"latitudeE7"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">48445182</span><span class="p">,</span><span class="w">
    </span><span class="nl">"longitudeE7"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">24287419</span><span class="p">,</span><span class="w">
    </span><span class="nl">"accuracy"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">13</span><span class="p">,</span><span class="w">
    </span><span class="nl">"altitude"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">117</span><span class="p">,</span><span class="w">
    </span><span class="nl">"verticalAccuracy"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">2</span><span class="w">
  </span><span class="p">},</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"timestampMs"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="s2">"1532122465164"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"latitudeE7"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">439445411</span><span class="p">,</span><span class="w">
    </span><span class="nl">"longitudeE7"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">26287254</span><span class="p">,</span><span class="w">
    </span><span class="nl">"accuracy"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">14</span><span class="p">,</span><span class="w">
    </span><span class="nl">"altitude"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">117</span><span class="p">,</span><span class="w">
    </span><span class="nl">"verticalAccuracy"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">2</span><span class="w">
  </span><span class="p">},</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"timestampMs"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="s2">"1532122068529"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"latitudeE7"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">419945411</span><span class="p">,</span><span class="w">
    </span><span class="nl">"longitudeE7"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">12287254</span><span class="p">,</span><span class="w">
    </span><span class="nl">"accuracy"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">14</span><span class="p">,</span><span class="w">
    </span><span class="nl">"altitude"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">117</span><span class="p">,</span><span class="w">
    </span><span class="nl">"verticalAccuracy"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">2</span><span class="w">
  </span><span class="p">}]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>I loaded the JSON and created a custom <code class="language-plaintext highlighter-rouge">Location</code> class which just registered the GPS info and the timestamp. I converted the timestamps to seconds when loading them. I also defined some operators to be able to sort and search the locations list.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#
# Note I construct directly from the JSON dictionary
#
</span><span class="k">class</span> <span class="nc">Location</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">d</span><span class="o">=</span><span class="p">{}):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">timestamp</span> <span class="o">=</span> <span class="bp">None</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">latitude</span> <span class="o">=</span> <span class="bp">None</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">longitude</span> <span class="o">=</span> <span class="bp">None</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">altitude</span> <span class="o">=</span> <span class="mi">0</span>

        <span class="k">for</span> <span class="n">key</span> <span class="ow">in</span> <span class="n">d</span><span class="p">:</span>
            <span class="k">if</span> <span class="n">key</span> <span class="o">==</span> <span class="s">'timestampMs'</span><span class="p">:</span>
                <span class="bp">self</span><span class="p">.</span><span class="n">timestamp</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">d</span><span class="p">[</span><span class="n">key</span><span class="p">])</span> <span class="o">/</span> <span class="mi">1000</span>
            <span class="k">elif</span> <span class="n">key</span> <span class="o">==</span> <span class="s">'latitudeE7'</span><span class="p">:</span>
                <span class="bp">self</span><span class="p">.</span><span class="n">latitude</span> <span class="o">=</span> <span class="n">d</span><span class="p">[</span><span class="n">key</span><span class="p">]</span>
            <span class="k">elif</span> <span class="n">key</span> <span class="o">==</span> <span class="s">'longitudeE7'</span><span class="p">:</span>
                <span class="bp">self</span><span class="p">.</span><span class="n">longitude</span> <span class="o">=</span> <span class="n">d</span><span class="p">[</span><span class="n">key</span><span class="p">]</span>
            <span class="k">elif</span> <span class="n">key</span> <span class="o">==</span> <span class="s">'altitude'</span><span class="p">:</span>
                <span class="bp">self</span><span class="p">.</span><span class="n">altitude</span> <span class="o">=</span> <span class="n">d</span><span class="p">[</span><span class="n">key</span><span class="p">]</span>

    <span class="k">def</span> <span class="nf">__eq__</span><span class="p">(</span> <span class="bp">self</span><span class="p">,</span> <span class="n">other</span> <span class="p">):</span>
        <span class="k">return</span> <span class="bp">self</span><span class="p">.</span><span class="n">timestamp</span> <span class="o">==</span> <span class="n">other</span><span class="p">.</span><span class="n">timestamp</span>
    <span class="k">def</span> <span class="nf">__lt__</span><span class="p">(</span> <span class="bp">self</span><span class="p">,</span> <span class="n">other</span> <span class="p">):</span>
        <span class="k">return</span> <span class="bp">self</span><span class="p">.</span><span class="n">timestamp</span> <span class="o">&lt;</span> <span class="n">other</span><span class="p">.</span><span class="n">timestamp</span>
    <span class="k">def</span> <span class="nf">__le__</span><span class="p">(</span> <span class="bp">self</span><span class="p">,</span> <span class="n">other</span> <span class="p">):</span>
        <span class="k">return</span> <span class="bp">self</span><span class="p">.</span><span class="n">timestamp</span> <span class="o">&lt;=</span> <span class="n">other</span><span class="p">.</span><span class="n">timestamp</span>
    <span class="k">def</span> <span class="nf">__gt__</span><span class="p">(</span> <span class="bp">self</span><span class="p">,</span> <span class="n">other</span> <span class="p">):</span>
        <span class="k">return</span> <span class="bp">self</span><span class="p">.</span><span class="n">timestamp</span> <span class="o">&gt;</span> <span class="n">other</span><span class="p">.</span><span class="n">timestamp</span>
    <span class="k">def</span> <span class="nf">__ge__</span><span class="p">(</span> <span class="bp">self</span><span class="p">,</span> <span class="n">other</span> <span class="p">):</span>
        <span class="k">return</span> <span class="bp">self</span><span class="p">.</span><span class="n">timestamp</span> <span class="o">&gt;=</span> <span class="n">other</span><span class="p">.</span><span class="n">timestamp</span>
    <span class="k">def</span> <span class="nf">__ne__</span><span class="p">(</span> <span class="bp">self</span><span class="p">,</span> <span class="n">other</span> <span class="p">):</span>
        <span class="k">return</span> <span class="bp">self</span><span class="p">.</span><span class="n">timestamp</span> <span class="o">!=</span> <span class="n">other</span><span class="p">.</span><span class="n">timestamp</span>
</code></pre></div></div>

<p>Using the <a href="https://docs.python.org/2/library/bisect.html">bisect</a> python module I could have \(O(\log{}n)\) search times, which is as good as I can hope for. I had to reverse the locations because Google exports them in descending timestamp order.</p>

<p>I got the timestamp from my images using PIL black magic <code class="language-plaintext highlighter-rouge">image._getexif()[36867]</code>. And then it was a matter of finding the location with the closest timestamp to my image. From <a href="https://stackoverflow.com/a/12141511/2628257">SO</a>:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">find_closest_in_time</span><span class="p">(</span><span class="n">locations</span><span class="p">,</span> <span class="n">a_location</span><span class="p">):</span>
    <span class="n">pos</span> <span class="o">=</span> <span class="n">bisect_left</span><span class="p">(</span><span class="n">locations</span><span class="p">,</span> <span class="n">a_location</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">pos</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
        <span class="k">return</span> <span class="n">locations</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
    <span class="k">if</span> <span class="n">pos</span> <span class="o">==</span> <span class="nb">len</span><span class="p">(</span><span class="n">locations</span><span class="p">):</span>
        <span class="k">return</span> <span class="n">locations</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
    
    <span class="n">before</span> <span class="o">=</span> <span class="n">locations</span><span class="p">[</span><span class="n">pos</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span>
    <span class="n">after</span> <span class="o">=</span> <span class="n">locations</span><span class="p">[</span><span class="n">pos</span><span class="p">]</span>
    <span class="k">if</span> <span class="n">after</span><span class="p">.</span><span class="n">timestamp</span> <span class="o">-</span> <span class="n">a_location</span><span class="p">.</span><span class="n">timestamp</span> <span class="o">&lt;</span> <span class="n">a_location</span><span class="p">.</span><span class="n">timestamp</span> <span class="o">-</span> <span class="n">before</span><span class="p">.</span><span class="n">timestamp</span><span class="p">:</span>
       <span class="k">return</span> <span class="n">after</span>
    <span class="k">else</span><span class="p">:</span>
       <span class="k">return</span> <span class="n">before</span>
</code></pre></div></div>

<p>In order to add the GPS information I used the <a href="https://github.com/bennoleslie/pexif">pexif</a> module at first. But I found that the Exif data written by the module was sometimes broken. I switched to <a href="https://pypi.org/project/piexif/">piexif</a>, which does basically the same. The documentation however was a bit harder to bite, luckily I found <a href="https://gist.github.com/c060604/8a51f8999be12fc2be498e9ca56adc72">this gist</a> that showed how to embed GPS data via exif.</p>

<p>I also added a time threshold of a couple of hours, any location out of that threshold would be considered inaccurate.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#
# piexif library usage to add GPS info to an image
#
</span><span class="n">approx_location</span> <span class="o">=</span> <span class="n">find_closest_in_time</span><span class="p">(</span><span class="n">my_locations</span><span class="p">,</span> <span class="n">curr_loc</span><span class="p">)</span>
<span class="n">hours_away</span> <span class="o">=</span> <span class="nb">abs</span><span class="p">(</span><span class="n">approx_location</span><span class="p">.</span><span class="n">timestamp</span> <span class="o">-</span> <span class="n">time_jpeg_unix</span><span class="p">)</span> <span class="o">/</span> <span class="mi">3600</span>

<span class="k">if</span><span class="p">(</span><span class="n">hours_away</span> <span class="o">&lt;</span> <span class="n">hours_threshold</span><span class="p">):</span>
    <span class="c1"># Google stores these as x-e7
</span>    <span class="n">lat_f</span> <span class="o">=</span> <span class="nb">float</span><span class="p">(</span><span class="n">approx_location</span><span class="p">.</span><span class="n">latitude</span><span class="p">)</span> <span class="o">/</span> <span class="mf">10000000.0</span>
    <span class="n">lon_f</span> <span class="o">=</span> <span class="nb">float</span><span class="p">(</span><span class="n">approx_location</span><span class="p">.</span><span class="n">longitude</span><span class="p">)</span> <span class="o">/</span> <span class="mf">10000000.0</span>
    
    <span class="n">exif_dict</span> <span class="o">=</span> <span class="n">piexif</span><span class="p">.</span><span class="n">load</span><span class="p">(</span><span class="n">image_file</span><span class="p">)</span>        
    <span class="n">exif_dict</span><span class="p">[</span><span class="s">"GPS"</span><span class="p">][</span><span class="n">piexif</span><span class="p">.</span><span class="n">GPSIFD</span><span class="p">.</span><span class="n">GPSVersionID</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
    <span class="n">exif_dict</span><span class="p">[</span><span class="s">"GPS"</span><span class="p">][</span><span class="n">piexif</span><span class="p">.</span><span class="n">GPSIFD</span><span class="p">.</span><span class="n">GPSAltitudeRef</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span> <span class="k">if</span> <span class="n">approx_location</span><span class="p">.</span><span class="n">altitude</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="k">else</span> <span class="mi">1</span>        
    <span class="n">exif_dict</span><span class="p">[</span><span class="s">"GPS"</span><span class="p">][</span><span class="n">piexif</span><span class="p">.</span><span class="n">GPSIFD</span><span class="p">.</span><span class="n">GPSAltitude</span><span class="p">]</span> <span class="o">=</span> <span class="n">change_to_rational</span><span class="p">(</span><span class="nb">abs</span><span class="p">(</span><span class="n">approx_location</span><span class="p">.</span><span class="n">altitude</span><span class="p">))</span>
    <span class="n">exif_dict</span><span class="p">[</span><span class="s">"GPS"</span><span class="p">][</span><span class="n">piexif</span><span class="p">.</span><span class="n">GPSIFD</span><span class="p">.</span><span class="n">GPSLatitudeRef</span><span class="p">]</span> <span class="o">=</span> <span class="s">'S'</span> <span class="k">if</span> <span class="n">lat_f</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="k">else</span> <span class="s">'N'</span>
    <span class="n">exif_dict</span><span class="p">[</span><span class="s">"GPS"</span><span class="p">][</span><span class="n">piexif</span><span class="p">.</span><span class="n">GPSIFD</span><span class="p">.</span><span class="n">GPSLongitudeRef</span><span class="p">]</span> <span class="o">=</span> <span class="s">'W'</span> <span class="k">if</span> <span class="n">lon_f</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="k">else</span> <span class="s">'E'</span>

    <span class="n">lat_deg</span> <span class="o">=</span> <span class="n">to_deg</span><span class="p">(</span><span class="n">lat_f</span><span class="p">,</span> <span class="p">[</span><span class="s">"S"</span><span class="p">,</span> <span class="s">"N"</span><span class="p">])</span>
    <span class="n">lng_deg</span> <span class="o">=</span> <span class="n">to_deg</span><span class="p">(</span><span class="n">lon_f</span><span class="p">,</span> <span class="p">[</span><span class="s">"W"</span><span class="p">,</span> <span class="s">"E"</span><span class="p">])</span>
    <span class="n">exiv_lat</span> <span class="o">=</span> <span class="p">(</span><span class="n">change_to_rational</span><span class="p">(</span><span class="n">lat_deg</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span> <span class="n">change_to_rational</span><span class="p">(</span><span class="n">lat_deg</span><span class="p">[</span><span class="mi">1</span><span class="p">]),</span> <span class="n">change_to_rational</span><span class="p">(</span><span class="n">lat_deg</span><span class="p">[</span><span class="mi">2</span><span class="p">]))</span>
    <span class="n">exiv_lng</span> <span class="o">=</span> <span class="p">(</span><span class="n">change_to_rational</span><span class="p">(</span><span class="n">lng_deg</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span> <span class="n">change_to_rational</span><span class="p">(</span><span class="n">lng_deg</span><span class="p">[</span><span class="mi">1</span><span class="p">]),</span> <span class="n">change_to_rational</span><span class="p">(</span><span class="n">lng_deg</span><span class="p">[</span><span class="mi">2</span><span class="p">]))</span>
    <span class="n">exif_dict</span><span class="p">[</span><span class="s">"GPS"</span><span class="p">][</span><span class="n">piexif</span><span class="p">.</span><span class="n">GPSIFD</span><span class="p">.</span><span class="n">GPSLatitude</span><span class="p">]</span> <span class="o">=</span> <span class="n">exiv_lat</span>
    <span class="n">exif_dict</span><span class="p">[</span><span class="s">"GPS"</span><span class="p">][</span><span class="n">piexif</span><span class="p">.</span><span class="n">GPSIFD</span><span class="p">.</span><span class="n">GPSLongitude</span><span class="p">]</span> <span class="o">=</span> <span class="n">exiv_lng</span>
    
    <span class="n">exif_bytes</span> <span class="o">=</span> <span class="n">piexif</span><span class="p">.</span><span class="n">dump</span><span class="p">(</span><span class="n">exif_dict</span><span class="p">)</span>
    <span class="n">image</span><span class="p">.</span><span class="n">save</span><span class="p">(</span><span class="n">image_file</span><span class="p">,</span> <span class="n">exif</span><span class="o">=</span><span class="n">exif_bytes</span><span class="p">)</span>
<span class="k">else</span><span class="p">:</span>
    <span class="k">print</span> <span class="s">'Time threshold surpassed'</span>
</code></pre></div></div>

<p>The full script can be found <a href="https://github.com/chuckleplant/blog/blob/master/scripts/location-geotag.py">here</a>. Make sure to make a backup of your images before running the script!</p>]]></content><author><name>Sergio Basurco</name></author><category term="google" /><category term="location" /><category term="geotag" /><category term="python" /><category term="exif" /><category term="jpeg" /><category term="code" /><category term="photography" /><summary type="html"><![CDATA[He who controls the past controls the future. He who controls the present controls the past. – George Orwell, 1984]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://chuckleplant.github.io/img/600/geotag-gphotos.png" /><media:content medium="image" url="https://chuckleplant.github.io/img/600/geotag-gphotos.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Uncharted 4: A Thief’s End</title><link href="https://chuckleplant.github.io/2018/07/15/uncharted-4.html" rel="alternate" type="text/html" title="Uncharted 4: A Thief’s End" /><published>2018-07-15T00:00:00+02:00</published><updated>2018-07-15T00:00:00+02:00</updated><id>https://chuckleplant.github.io/2018/07/15/uncharted-4</id><content type="html" xml:base="https://chuckleplant.github.io/2018/07/15/uncharted-4.html"><![CDATA[<blockquote>
  <p>Spoiler alert: The images below may ruin your game experience.</p>
</blockquote>

<p>I hated how much I loved the photography feature in Uncharted 4. The problem is that I spent way more time taking pictures than actually playing the game. It’s an actual problem and game designers should look into it. You can either play or take pictures, not both. It’s a bit like recording fireworks with your phone, just don’t.</p>

<p>Maybe the mode could be unlocked once you complete the game for the first time. Of course there are many players that play only once… And the feature is great for sharing and marketing. Anyways, those are my 2cts on the topic.</p>

<p>I am launching a brand new image gallery. I used aerobless’ <a href="https://github.com/aerobless/jekyll-photo-gallery">Jekyll photo gallery</a>. It lets you have a static site for each image which is nice for comments or sharing.</p>

<p>Here’s a selection of some of the pictures I took while playing Uncherted 4: A Thief’s End. I really enjoyed creating false narratives with each picture, specially when characters were facing each other, or capturing a secondary character making it look like there was a story behind them.</p>

<div class="pig-gallery" id="pig"></div>
<script src="/js/plugins/pig/src/pig.min.js"></script>
<script>
                              var imageData = [{filename: "Uncharted/Deep stare.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Deep-stare/"},{filename: "Uncharted/No you didn't.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/No-you-didnt/"},{filename: "Uncharted/Lamp.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Lamp/"},{filename: "Uncharted/Lemon dream.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Lemon-dream/"},{filename: "Uncharted/Hallway light.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Hallway-light/"},{filename: "Uncharted/Fulfilled.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Fulfilled/"},{filename: "Uncharted/Lighter.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Lighter/"},{filename: "Uncharted/Sunset arc.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Sunset-arc/"},{filename: "Uncharted/A little dance.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/A-little-dance/"},{filename: "Uncharted/Dry structure.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Dry-structure/"},{filename: "Uncharted/Mist and weed.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Mist-and-weed/"},{filename: "Uncharted/Chilly.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Chilly/"},{filename: "Uncharted/I wanted the walky.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/I-wanted-the-walky/"},{filename: "Uncharted/Long fall.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Long-fall/"},{filename: "Uncharted/Fresh 90's album.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Fresh-90s-album/"},{filename: "Uncharted/Within trees.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Within-trees/"},{filename: "Uncharted/Blinded again.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Blinded-again/"},{filename: "Uncharted/Pupil.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Pupil/"},{filename: "Uncharted/Flick these.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Flick-these/"},{filename: "Uncharted/What's that smell.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Whats-that-smell/"},{filename: "Uncharted/It wasn't me.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/It-wasnt-me/"},{filename: "Uncharted/Orange rectangle.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Orange-rectangle/"},{filename: "Uncharted/Comic jump.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Comic-jump/"},{filename: "Uncharted/Cave arc.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Cave-arc/"},{filename: "Uncharted/Grainy mountain.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Grainy-mountain/"},{filename: "Uncharted/Shower.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Shower/"},{filename: "Uncharted/Who's doing this.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Whos-doing-this/"},{filename: "Uncharted/Sorry mate.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Sorry-mate/"},{filename: "Uncharted/National geographic.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/National-geographic/"},{filename: "Uncharted/Tree between bricks.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Tree-between-bricks/"},{filename: "Uncharted/Zenit jump.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Zenit-jump/"},{filename: "Uncharted/Tombstones.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Tombstones/"},{filename: "Uncharted/Three friends.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Three-friends/"},{filename: "Uncharted/Cross in field.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Cross-in-field/"},{filename: "Uncharted/Arcway.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Arcway/"},{filename: "Uncharted/Soft light.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Soft-light/"},{filename: "Uncharted/Romantic comedy shot.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Romantic-comedy-shot/"},{filename: "Uncharted/Bourne shot.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Bourne-shot/"},{filename: "Uncharted/Don't throw me fruit.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Dont-throw-me-fruit/"},{filename: "Uncharted/Moist.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Moist/"},{filename: "Uncharted/Guybrush.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Guybrush/"},{filename: "Uncharted/Light through water.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Light-through-water/"},{filename: "Uncharted/Underwater arc.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Underwater-arc/"},{filename: "Uncharted/Nate swimming.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Nate-swimming/"},{filename: "Uncharted/Duel shot.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Duel-shot/"},{filename: "Uncharted/Contrasty rock.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Contrasty-rock/"},{filename: "Uncharted/Jungle arc.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Jungle-arc/"},{filename: "Uncharted/An eye.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/An-eye/"},{filename: "Uncharted/Cave frame.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Cave-frame/"},{filename: "Uncharted/Blue postcard.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Blue-postcard/"},{filename: "Uncharted/Rock.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Rock/"},{filename: "Uncharted/Flowers under arc.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Flowers-under-arc/"},{filename: "Uncharted/I love arcs.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/I-love-arcs/"},{filename: "Uncharted/Cinematic dialogue Nate.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Cinematic-dialogue-Nate/"},{filename: "Uncharted/Cinematic Samuel.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Cinematic-Samuel/"},{filename: "Uncharted/Do you even swim.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Do-you-even-swim/"},{filename: "Uncharted/Guybrush Threepstone.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Guybrush-Threepstone/"},{filename: "Uncharted/Stormy weather.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Stormy-weather/"},{filename: "Uncharted/Sepia or cloudy sunset.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Sepia-or-cloudy-sunset/"},{filename: "Uncharted/Plant over hole.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Plant-over-hole/"},{filename: "Uncharted/Wet and red.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Wet-and-red/"},{filename: "Uncharted/Windy rain.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Windy-rain/"},{filename: "Uncharted/The bear.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/The-bear/"},{filename: "Uncharted/Humid landscape and scary rock.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Humid-landscape-and-scary-rock/"},{filename: "Uncharted/Corridor.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Corridor/"},{filename: "Uncharted/Nature finds a way.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Nature-finds-a-way/"},{filename: "Uncharted/Mugs with secrets.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Mugs-with-secrets/"},{filename: "Uncharted/Once cozy always cozy.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Once-cozy-always-cozy/"},{filename: "Uncharted/Old patio.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Old-patio/"},{filename: "Uncharted/Light facing dark.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Light-facing-dark/"},{filename: "Uncharted/Defaced library.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Defaced-library/"},{filename: "Uncharted/Him again.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Him-again/"},{filename: "Uncharted/Moonlight.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Moonlight/"},{filename: "Uncharted/Blinded.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Blinded/"},{filename: "Uncharted/Big helmet.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Big-helmet/"},{filename: "Uncharted/The smallest island.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/The-smallest-island/"},{filename: "Uncharted/Hanging out.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Hanging-out/"},{filename: "Uncharted/Crows.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Crows/"},{filename: "Uncharted/So many coins here.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/So-many-coins-here/"},{filename: "Uncharted/Just sneezed.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Just-sneezed/"},{filename: "Uncharted/Flower carpet.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Flower-carpet/"},{filename: "Uncharted/Statue.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Statue/"},{filename: "Uncharted/Torch.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Torch/"},{filename: "Uncharted/Pierced eardrums.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Pierced-eardrums/"},{filename: "Uncharted/Reading hieroglyphs.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Reading-hieroglyphs/"},{filename: "Uncharted/Heard something.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Heard-something/"},{filename: "Uncharted/Stupid Goonies.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Stupid-Goonies/"},{filename: "Uncharted/Please put that out.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Please-put-that-out/"},{filename: "Uncharted/Red flags.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Red-flags/"},{filename: "Uncharted/Shipwreck dusk.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Shipwreck-dusk/"},{filename: "Uncharted/Patio guardian.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Patio-guardian/"},{filename: "Uncharted/Catching some air.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Catching-some-air/"},{filename: "Uncharted/Doesn't get much cozier.jpg", aspectRatio: 1.7777777777777777, url: "/img/albums/Uncharted/Doesnt-get-much-cozier/"},];
                              var options = {
                                urlForSize: function(filename, size) {
                                  return '/img/' + size + '/' + filename;
                                },
                                figureTagName: "a",
                                transitionSpeed: 500,
                                getMinAspectRatio: function(lastWindowWidth) {
                                if (lastWindowWidth <= 640)  // Phones
                                  return 1;
                                else if (lastWindowWidth <= 1280)  // Tablets
                                  return 3;
                                else if (lastWindowWidth <= 1920)  // Laptops
                                  return 4;
                                return 5;  // Large desktops
                              },
                                spaceBetweenImages: 3,
                                getImageSize: function(lastWindowWidth) {
                                  return 250;
                                }
                                // ...
                              };
                          
                              var pig = new Pig(imageData, options).enable();
                            </script>]]></content><author><name>Sergio Basurco</name></author><category term="uncharted" /><category term="games" /><category term="album" /><category term="playstation" /><summary type="html"><![CDATA[I hated how much I loved the photography feature in Uncharted 4. The problem is that I spent way more time taking pictures than actually playing the game. It's an actual problem and game designers should look into it. You can either play or take pictures, not both. It's a bit like recording fireworks with your phone, just don't.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://chuckleplant.github.io/img/600/Lighter.jpg" /><media:content medium="image" url="https://chuckleplant.github.io/img/600/Lighter.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Isaac Hayes Wallpaper Generator - Volumetric light scattering, 2 of 2</title><link href="https://chuckleplant.github.io/2017/12/04/light-shafts-pt-2.html" rel="alternate" type="text/html" title="Isaac Hayes Wallpaper Generator - Volumetric light scattering, 2 of 2" /><published>2017-12-04T00:00:00+01:00</published><updated>2017-12-04T00:00:00+01:00</updated><id>https://chuckleplant.github.io/2017/12/04/light-shafts-pt-2</id><content type="html" xml:base="https://chuckleplant.github.io/2017/12/04/light-shafts-pt-2.html"><![CDATA[<blockquote>
  <p>Continuation of <a href="/2017/05/28/light-shafts.html">Isaac Hayes Wallpaper Generator - Volumetric light scattering, 1 of 2</a></p>

  <p>You can go straight to the <a href="/emscripten/isaac_hayes_wg/IsaacWallpaper.html">Wallpaper Generator</a> tool (works best with chrome last I tested)</p>
</blockquote>

<p>Now that covered the basics of light rendering and volumetric light scattering, let’s see how we don’t do any of that and instead cheat to get an approximated result.</p>

<p>A bit like in impressionism, we don’t try to match physical light behaviour objectively, but to emulate what we see in an efficient way. That’s computer graphics in a nutshell.</p>

<h2 id="formulae-summary">Formulae summary</h2>

<p>Rendring equation:</p>

\[{L_{\text{o}}(\mathbf x,\, \omega_{\text{o}})} {\,=\,} {L_e(\mathbf x,\, \omega_{\text{o}})}  {\ +\,}  {\int_\Omega}  {f_r(\mathbf x,\, \omega_{\text{i}},\, \omega_{\text{o}})\,}  {L_{\text{i}}(\mathbf x,\, \omega_{\text{i}})\,}  {(\omega_{\text{i}}\,\cdot\,\mathbf n)\,}  {\operatorname d \omega_{\text{i}}}\]

<p>Light intensity and extinction constant:</p>

\[I=I_\text{o} · e^{-\tau s}\]

<p>Light scattering equation:</p>

\[{L(s,\,\theta)}  {\,=\,}  {L_\text{o}}  {e^{-\tau s}}  {\,+\,} \frac{1}{\tau}  {\,E_{sun}}  {\,S(\theta)}  {(1 \,-\, }  {e^{-\tau s}} {)}\]

<p>Occlusion:</p>

\[L(s,\,\theta,\,\phi) = (1 \,-\, D(\phi)) \,L(s,\,\theta)\]

<h2 id="accounting-for-occlusion">Accounting for occlusion</h2>

<p>We need to account for all objects occluding each beam of light. For this rendering solution we use only screen space information, so we don’t have any 3D information and cannot compute for each ray whether it was occluded or not. Also keep in mind, that each pixel on screen represents us, the viewer.</p>

<p>Eq. 3 computes, for a whole ray, the accumulated light value based on the media it traverses. What we’ll do is march on screen space, accumulating by sampling along the ray’s path towards any given pixel.</p>

<div class="image-container">
    <div class="Container">
        <div class="Content">
            <img class="audiovisual" src="/images/cheating-shaft.png" alt="Each dot represents a sample, we omit the samples that have an occluder. This makes the pixels with no ocluders (on screen space) be brighter." style="width: auto;" />
        </div>
    </div>
    <span class="caption" style="font-size: 80%"><i>Each dot represents a sample, we omit the samples that have an occluder. This makes the pixels with no ocluders (on screen space) be brighter.</i></span>
</div>

<h2 id="the-sum">The sum</h2>

<p>We want to compute the light at a given <em>fragment</em> (each small square in the image above), we will sum the energy values sampled along the ray from the light source towards our pixel. We will:</p>

\[L(p) = \sum_{i=0}^n decay^i \times weight \times \frac{L(s,\theta)}{n}\]

<p>The \(decay\) term is a falloff, that attenuates the energy based on the distance to the light source. The \(weight\) is the shaft’s intensity<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">1</a></sup>.</p>

<p>The further the pixel is from the light source, the dimmer light accumulation is.</p>

<div class="image-container">
    <div class="Container">
        <div class="Content">
            <img class="audiovisual" src="/images/red-dead-blackness.png" alt="In our first render pass we render just the scene in black and the light source. Note that we paint the sun red in this case so that the light shifts from white at maximum intensity to a dim red (What I like to call dead red)." style="width: auto;" />
        </div>
    </div>
    <span class="caption" style="font-size: 80%"><i>In our first render pass we render just the scene in black and the light source. Note that we paint the sun red in this case so that the light shifts from white at maximum intensity to a dim red (What I like to call dead red).</i></span>
</div>

<div class="image-container">
    <div class="Container">
        <div class="Content">
            <img class="audiovisual" src="/images/red-dead-scene.png" alt="Our second render pass draws the scene as we want it, in this case just a silhouette with the sun behind it. Note that we draw the sun as a white circle too without the shafts." style="width: auto;" />
        </div>
    </div>
    <span class="caption" style="font-size: 80%"><i>Our second render pass draws the scene as we want it, in this case just a silhouette with the sun behind it. Note that we draw the sun as a white circle too without the shafts.</i></span>
</div>

<div class="image-container">
    <div class="Container">
        <div class="Content">
            <img class="audiovisual" src="/images/red-dead-shaft.png" alt="Last we run a final pass that samples for each fragment the brightness energy in the direction of the light source. This results in the shafts of light passing through the occluders." style="width: auto;" />
        </div>
    </div>
    <span class="caption" style="font-size: 80%"><i>Last we run a final pass that samples for each fragment the brightness energy in the direction of the light source. This results in the shafts of light passing through the occluders.</i></span>
</div>

<h1 id="application-in-games">Application in games</h1>

<p>It is based on physical effects, but is not by any means physically realistic. The effect is only valid when the light in screen space. The effect disappears completely when the light is either out of view or completely occluded.</p>

<p>But, should games aim for physical realism? I don’t think so. As a means to transmitting emotions to the player, game developers should use any possible trick to do so, visual illusions such as this rather simplistic radial blur are very effective.</p>

<h1 id="isaac-hayes-wallpaper-generator">Isaac Hayes Wallpaper Generator</h1>

<div class="image-container">
    <div class="Container">
        <div class="Content">
            <video class="audiovisual" controls="" autoplay="autoplay" loop="loop" style="width: 100%">
                <source src="/videos/rdrgif.mp4" type="video/mp4" />
            </video>            
        </div>
    </div>
    <span class="caption" style="font-size: 80%"><i></i></span>
</div>

<p>Whithout further ado I present the <a href="/emscripten/isaac_hayes_wg/IsaacWallpaper.html">Isaac Hayes Wallpaper Generator</a><sup id="fnref:2" role="doc-noteref"><a href="#fn:2" class="footnote" rel="footnote">2</a></sup>. You can tweak light intensity, background color. You can also upload your own image (with transparency) to play with it and pierce your own eyes with the power of the sun, or not, your call.<sup id="fnref:3" role="doc-noteref"><a href="#fn:3" class="footnote" rel="footnote">3</a></sup>\(^,\)<sup id="fnref:4" role="doc-noteref"><a href="#fn:4" class="footnote" rel="footnote">4</a></sup></p>

<p>It was also an experiment using Emscripten to port C++ code to JavaScript, the toughest was loading files from disk and saving them back. Apparently browsers are not cool with you merrily accessing the file system!</p>

<p>Find all the relevant in the github <a href="https://github.com/chuckleplant/IsaacHayesWG">repository</a>.</p>

<hr />

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p>Note that we’ve dropped the exposure term use in Nvidia’s formulation, it just provides more granularity on the \(weight\) term. <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
    <li id="fn:2" role="doc-endnote">
      <p><a href="https://www.youtube.com/watch?v=nFvRvSxsW-I">Recommended soundtrack</a> <a href="#fnref:2" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
    <li id="fn:3" role="doc-endnote">
      <p><a href="https://github.com/openframeworks/openFrameworks">Coded using openFrameworks.</a> <a href="#fnref:3" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
    <li id="fn:4" role="doc-endnote">
      <p><a href="https://medium.com/community-play-3d/god-rays-whats-that-5a67f26aeac2">Based on Julien Moreau-Mathis: God Rays? What’s that?</a> <a href="#fnref:4" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>]]></content><author><name>Sergio Basurco</name></author><category term="sun" /><category term="code" /><summary type="html"><![CDATA[Continuation of Isaac Hayes Wallpaper Generator - Volumetric light scattering, 1 of 2 You can go straight to the Wallpaper Generator tool (works best with chrome last I tested)]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://chuckleplant.github.io/img/600/red-dead-shaft.png" /><media:content medium="image" url="https://chuckleplant.github.io/img/600/red-dead-shaft.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Isaac Hayes Wallpaper Generator - Volumetric light scattering, 1 of 2</title><link href="https://chuckleplant.github.io/2017/05/28/light-shafts.html" rel="alternate" type="text/html" title="Isaac Hayes Wallpaper Generator - Volumetric light scattering, 1 of 2" /><published>2017-05-28T00:00:00+02:00</published><updated>2017-05-28T00:00:00+02:00</updated><id>https://chuckleplant.github.io/2017/05/28/light-shafts</id><content type="html" xml:base="https://chuckleplant.github.io/2017/05/28/light-shafts.html"><![CDATA[<blockquote>
  <p>This post is greatly based on the <a href="https://developer.nvidia.com/gpugems/GPUGems3/gpugems3_ch13.html">Nvidia GPU Gem on volumetric light scattering</a>. Here I walk you through the formulae and core concepts. I highly recommend reading that one instead, and come back only if you couldn’t follow, or for fun.</p>

  <p>If you’re unfamiliar with computer graphics, I highly recommend you to watch <a href="https://youtu.be/IyUgHPs86XM">John Carmack’s talk on lighting and rendering</a>.</p>
</blockquote>

<div class="image-container">
    <div class="Container">
        <div class="Content">
            <img class="audiovisual" src="/images/red-dead-shaft.png" alt="Light shafts sample image, generated with the *Isaac Hayes Wallpaper Generator* tool, available in the second part of this entry. The image is from Rockstar's Red Dead Redemption 2 concept art." style="width: auto;" />
        </div>
    </div>
    <span class="caption" style="font-size: 80%"><i>Light shafts sample image, generated with the *Isaac Hayes Wallpaper Generator* tool, available in the second part of this entry. The image is from Rockstar's Red Dead Redemption 2 concept art.</i></span>
</div>

<p>Often there’s one rendering effect that has me in awe everytime I see it. The first one I remember was normal mapping. While playing videogames I used to walk towards a wall that had a light bulb nearby, and then I spent a good 10 minutes just moving near the wall, seeing how the light behaved.</p>

<p>Lately I found myself doing the same thing while playing The Witcher 3, I just forwarded time until the sun was low enough so I could just toy with the light shaft effects between the trees. And then again, I spend a shameful amount of time just walking back and forth seeing how these patterns would unfold.</p>

<p>For the sake of me actually playing videogames instead of just being mesmerized by technical feats, I decided to understand how light shafts are generated and what’s the theory behind it.</p>

<p>My hope here is to give any reader a shallow but thorough overview of computer graphics rendering and physically based rendering effects. These two concepts are rather tangent, in the sense that computer graphics will not use the actual physical formulae, but hacky approximations.</p>

<h2 id="rendering-equation-review">Rendering equation review</h2>

<blockquote>
  <p>This drawing and explanation were featured in <a href="https://programs.sigchi.org/chi/2022/program/content/68734">CHI’22: ACM Conference on Human Factors in Computing Systems</a>.</p>
</blockquote>

<p><img src="/images/rendering-eq-light-dark.png" alt="renderineq" /></p>

\[\definecolor{steadyblue}{RGB}{58, 125, 242} %3a7df2
\definecolor{lobster}{RGB}{185,138,162} %B98AA2
\definecolor{mars}{RGB}{255,165,44} %FFA52C
\definecolor{rosamund}{RGB}{198,73,255} %C649FF
\definecolor{gold}{RGB}{255,206,63} %FFCE3F
\definecolor{bleu}{RGB}{73,214,255} %49D6FF
\definecolor{pistacho}{RGB}{118,163,39} %76A327
\definecolor{sea}{RGB}{41,153,124}  %29997C 
\definecolor{flower}{RGB}{255,85,149} %FF5595

\textcolor{steadyblue}{L_{\text{o}}(\mathbf x,\, \omega_{\text{o}})} {\,=\,} \textcolor{mars}{L_e(\mathbf x,\, \omega_{\text{o}})} {\ +\,} \textcolor{bleu}{\int_\Omega} \textcolor{flower}{f_r(\mathbf x,\, \omega_{\text{i}},\, \omega_{\text{o}})\,} \textcolor{rosamund}{L_{\text{i}}(\mathbf x,\, \omega_{\text{i}})\,} \textcolor{pistacho}{(\omega_{\text{i}}\,\cdot\,\mathbf n)\,} \textcolor{bleu}{\operatorname d \omega_{\text{i}}}\]

<p>To find <font color="#3a7df2">the light towards the viewer from a specific point</font>, we sum the <font color="#FFA52C">light emitted from such point</font> plus <font color="#49D6FF">the integral within the unit hemisphere</font> of <font color="#C649FF">the light coming from a any given direction</font> multiplied by the <font color="#FF5595">chances of such light rays bouncing towards the viewer</font><sup id="fnref:100" role="doc-noteref"><a href="#fn:100" class="footnote" rel="footnote">1</a></sup> and also by <font color="#76A327">the irradiance factor over the normal at the point</font>.<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">2</a></sup>\(^,\)<sup id="fnref:2" role="doc-noteref"><a href="#fn:2" class="footnote" rel="footnote">3</a></sup></p>

<p>Note that <font color="C649FF">incoming light</font> is also computed by that very formula, which makes this exhaustingly recursive.</p>

<p>So, think about the pixel you’re reading right now, your screen is probably emitting more light than it transmits from other sources, if you have a glossy screen, then you see your own reflection. Meaning that for every point in your screen, light is reflected along the surface normal (perpendicular to your screen) in a <strong>specular</strong> fashion.</p>

<p>If you have a non-glossy screen, then the light bouncing from other light sources is more evenly distributed over the reflection hemisphere, hence not forming a clear image as a result, but a <strong>diffuse</strong> image instead.</p>

<h2 id="volumetric-light-scattering-equations">Volumetric light scattering equations</h2>

<p>Light, as the electromagnetic radiation it is, interacts with matter mainly in two ways<sup id="fnref:4" role="doc-noteref"><a href="#fn:4" class="footnote" rel="footnote">4</a></sup>:</p>

<ul>
  <li>Absorption (The photons disappear)</li>
  <li>Scattering (The photons change their direction)</li>
</ul>

<p>In both cases the <strong>transmitted intensity</strong> \(I\) decreases exponentially. Being \(\tau\) the extinction coefficient composed of light absortion and out-scattering, and \(s\) the thickness of the medium we traverse, we use an exponential function over \(e\) to represent the extinction coefficient<sup id="fnref:3" role="doc-noteref"><a href="#fn:3" class="footnote" rel="footnote">5</a></sup>:</p>

\[I=I_\text{o} · e^{-\tau s}\]

<p>This helps us understand how scattering is first modelled in Nvidia’s GPU gem on volumetric light scattering<sup id="fnref:7" role="doc-noteref"><a href="#fn:7" class="footnote" rel="footnote">6</a></sup>. Let \(s\) be the distance through the media and \(\theta\) the angle between the viewer and the light beam:</p>

<div class="image-container">
    <div class="Container">
        <div class="Content">
            <img class="audiovisual" src="/images/rendering-scatter-terms.png" alt="" style="width: auto;" />
        </div>
    </div>
    <span class="caption" style="font-size: 80%"><i></i></span>
</div>

\[\definecolor{steadyblue}{RGB}{0,76,212} %004CD4
\definecolor{lobster}{RGB}{185,138,162} %B98AA2
\definecolor{mars}{RGB}{255,165,44} %FFA52C
\definecolor{rosamund}{RGB}{198,73,255} %C649FF
\definecolor{gold}{RGB}{255,206,63} %FFCE3F
\definecolor{bleu}{RGB}{73,214,255} %49D6FF
\definecolor{pistacho}{RGB}{118,163,39} %76A327
\definecolor{sea}{RGB}{41,153,124}  %29997C 
\definecolor{greenbean}{RGB}{76,153,0}  %4C9900 

\textcolor{red}{L(s,\,\theta)} {\,=\,} \textcolor{steadyblue}{L_\text{o}} \textcolor{rosamund}{\,e^{-\tau s}} {\,+\,} \frac{1}{\tau} \textcolor{orange}{\,E_{sun}} \textcolor{greenbean}{\,S(\theta)} {\,(1 \,-\, } \textcolor{rosamund}{e^{-\tau s}}{)}\]

<p>The <font color="FF0000">light accounting for volumetric scattering</font> is a linear interpolation <font color="C649FF">weighed by the extinction constant</font>. Note how we interpolate between the <font color="004CD4">light computed at a given point</font> and the light due to scattering, which is a product of the <font color="FFAF00">source illumination</font> from the sun (or light source) and the <font color="4C9900">angular scattering term</font> according to Rayleigh and Mie properties.</p>

<p>Let’s talk a bit about the <font color="4C9900">Rayleigh and Mie term</font>, it’s a function of particle size, shape and composition of the medium we traverse. This component and the extinction coefficient model the atmosphere or space through which light scatters.</p>

<p>In a nutshell, smaller particles scatter according to the Rayleigh model, and larger particles according to Mie. In this context we consider smaller particles the ones much smaller than the wavelength of incoming light.</p>

<p>This means Rayleigh scattering bounces off smaller wavelengths, such as the blue spectrum. Mie on the other hand, is not dependent on wavelength, and it scatters the whole spectrum of light. Clouds are white because sunlight is white.</p>

<div class="image-container">
    <div class="Container">
        <div class="Content">
            <img class="audiovisual" src="/images/rayleigh-meow.png" alt="Rayleigh and Mie scattering describes how light scatters off of molecules in a medium depending on the size of those molecules. Smaller molecules respond to Mie scattering more than Rayleigh and viceversa.[^44]" style="width: auto;" />
        </div>
    </div>
    <span class="caption" style="font-size: 80%"><i>Rayleigh and Mie scattering describes how light scatters off of molecules in a medium depending on the size of those molecules. Smaller molecules respond to Mie scattering more than Rayleigh and viceversa.[^44]</i></span>
</div>

<h2 id="occlusion">Occlusion</h2>

<p>Last but not least, we need to take occluders into the equation. Let \(\phi\) represent the ray from the light emitter towards the observed point:</p>

\[L(s,\,\theta,\,\phi) = (1 \,-\, \textcolor{orange}{D(\phi)}{)} \textcolor{red}{\,L(s,\,\theta)}\]

<p>Is the light accounting for both <font color="FF0000">volumetric light scattering</font> and <font color="FFA600">the opacity term of all occluders</font>, which is the total opacity of the ocluders along the ray.</p>

<p>This term accumulates objects’ opacity. If there’s a solid object between light source and observer all light energy will be zeroed, however we must account for indirect light as well as seen in eq. 1.</p>

<h2 id="wrap-up">Wrap up</h2>

<p>This covers a shallow walk through the theory of visible light and atmospheric scattering. With the information above we should be able to compute the light <em>energy</em> towards the viewer for any point in space, note that we left out things like light wavelength for simplicity. I hope you have enough to get started.</p>

<p>In the next entry I will demonstrate these concepts implementing volumetric shafts of light with GLSL, completely dismissing all we learnt here and just hacking our way to rendered images.</p>

<p><a href="/2017/12/04/light-shafts-pt-2.html">Continue to part 2</a></p>

<hr />

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:100" role="doc-endnote">
      <p><a href="https://en.wikipedia.org/wiki/Bidirectional_reflectance_distribution_function">Bidirectional reflectance distribution function</a> <a href="#fnref:100" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
    <li id="fn:1" role="doc-endnote">
      <p><a href="https://en.wikipedia.org/wiki/Rendering_equation">Rendering equation</a> <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
    <li id="fn:2" role="doc-endnote">
      <p><a href="http://adereth.github.io/blog/2013/11/29/colorful-equations/">Colorful equations with MathJax</a> <a href="#fnref:2" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
    <li id="fn:4" role="doc-endnote">
      <p><a href="http://www.nbi.dk/~ogendal/personal/lho/lightscattering_theory_and_practice.pdf">Light Scattering Demystified - Theory and Practice, Lars Øgendal</a> <a href="#fnref:4" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
    <li id="fn:3" role="doc-endnote">
      <p><a href="https://www.youtube.com/watch?v=AuA2EAgAegE">Why number \(e\)?</a> <a href="#fnref:3" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
    <li id="fn:7" role="doc-endnote">
      <p><a href="https://developer.nvidia.com/gpugems/GPUGems3/gpugems3_ch13.html">Nvidia GPU Gems, Chapter 13. Volumetric Light Scattering as a Post-Process</a> <a href="#fnref:7" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>]]></content><author><name>Sergio Basurco</name></author><category term="sun" /><category term="code" /><summary type="html"><![CDATA[This post is greatly based on the Nvidia GPU Gem on volumetric light scattering. Here I walk you through the formulae and core concepts. I highly recommend reading that one instead, and come back only if you couldn’t follow, or for fun. If you’re unfamiliar with computer graphics, I highly recommend you to watch John Carmack’s talk on lighting and rendering.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://chuckleplant.github.io/img/600/red-dead-shaft.png" /><media:content medium="image" url="https://chuckleplant.github.io/img/600/red-dead-shaft.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>